[{"/Users/akashaki/personalProjects/AdminPanel/src/index.js":"1","/Users/akashaki/personalProjects/AdminPanel/src/App.js":"2","/Users/akashaki/personalProjects/AdminPanel/src/reportWebVitals.js":"3","/Users/akashaki/personalProjects/AdminPanel/src/components/nav/Nav.js":"4","/Users/akashaki/personalProjects/AdminPanel/src/components/LoginPage/LoginPage.js":"5","/Users/akashaki/personalProjects/AdminPanel/src/components/home/Home.js":"6","/Users/akashaki/personalProjects/AdminPanel/src/components/images/Images.js":"7","/Users/akashaki/personalProjects/AdminPanel/src/components/images/imagesTableItem.js":"8","/Users/akashaki/personalProjects/AdminPanel/src/components/members/Members.js":"9","/Users/akashaki/personalProjects/AdminPanel/src/components/members/MembersTableItem.js":"10","/Users/akashaki/personalProjects/AdminPanel/src/components/members/Create.js":"11","/Users/akashaki/personalProjects/AdminPanel/src/components/LoginPage/Login.js":"12","/Users/akashaki/personalProjects/AdminPanel/src/components/events/Events.js":"13","/Users/akashaki/personalProjects/AdminPanel/src/components/events/EventsTableItem.js":"14","/Users/akashaki/personalProjects/AdminPanel/src/components/events/Create.js":"15","/Users/akashaki/personalProjects/AdminPanel/src/components/types/Types.js":"16","/Users/akashaki/personalProjects/AdminPanel/src/components/types/TypesTableItem.js":"17","/Users/akashaki/personalProjects/AdminPanel/src/components/events/EventPage.js":"18","/Users/akashaki/personalProjects/AdminPanel/src/components/members/Profile.js":"19","/Users/akashaki/personalProjects/AdminPanel/src/components/events/EventOptions.js":"20","/Users/akashaki/personalProjects/AdminPanel/src/components/events/EditEvent.js":"21","/Users/akashaki/personalProjects/AdminPanel/src/components/events/ViewMembers.js":"22","/Users/akashaki/personalProjects/AdminPanel/src/components/events/Register.js":"23","/Users/akashaki/personalProjects/AdminPanel/src/components/events/ViewMembersTableItem.js":"24"},{"size":500,"mtime":1663958376000,"results":"25","hashOfConfig":"26"},{"size":3530,"mtime":1690900814370,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":1663958376000,"results":"28","hashOfConfig":"26"},{"size":2316,"mtime":1690980797211,"results":"29","hashOfConfig":"26"},{"size":1520,"mtime":1690875523145,"results":"30","hashOfConfig":"26"},{"size":382,"mtime":1690802850009,"results":"31","hashOfConfig":"26"},{"size":5547,"mtime":1690869215623,"results":"32","hashOfConfig":"26"},{"size":568,"mtime":1663958376000,"results":"33","hashOfConfig":"26"},{"size":3891,"mtime":1690803902189,"results":"34","hashOfConfig":"26"},{"size":2076,"mtime":1690804902498,"results":"35","hashOfConfig":"26"},{"size":5179,"mtime":1690875497729,"results":"36","hashOfConfig":"26"},{"size":1336,"mtime":1690871744126,"results":"37","hashOfConfig":"26"},{"size":6985,"mtime":1690970764850,"results":"38","hashOfConfig":"26"},{"size":1367,"mtime":1690961892564,"results":"39","hashOfConfig":"26"},{"size":5897,"mtime":1690961050786,"results":"40","hashOfConfig":"26"},{"size":5335,"mtime":1690884155334,"results":"41","hashOfConfig":"26"},{"size":325,"mtime":1690884108491,"results":"42","hashOfConfig":"26"},{"size":1742,"mtime":1690974348711,"results":"43","hashOfConfig":"26"},{"size":5546,"mtime":1690902361808,"results":"44","hashOfConfig":"26"},{"size":1094,"mtime":1690980978485,"results":"45","hashOfConfig":"26"},{"size":751,"mtime":1690967360770,"results":"46","hashOfConfig":"26"},{"size":1509,"mtime":1690980288321,"results":"47","hashOfConfig":"26"},{"size":5469,"mtime":1690977976616,"results":"48","hashOfConfig":"26"},{"size":4029,"mtime":1690980656830,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"ke3z5q",{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/akashaki/personalProjects/AdminPanel/src/index.js",[],["108","109"],"/Users/akashaki/personalProjects/AdminPanel/src/App.js",["110"],"import Nav from './components/nav/Nav';\nimport './App.css';\nimport './css/sb-admin-2.css'\nimport './css/sb-admin-2.min.css'\nimport Home from './components/home/Home';\nimport Members from './components/members/Members';\nimport Create from './components/members/Create';\n// import Categories from './components/categories/Categories';\nimport Images from './components/images/Images';\nimport Types from './components/types/Types';\n// import Headers from './components/header/Headers';\nimport LoginPage from './components/LoginPage/LoginPage';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport config from './config.json'\nimport { useState } from 'react';\nimport Events from './components/events/Events';\nimport Profile from './components/members/Profile';\n\nfunction App() {\n\n  const [user, setUser] = useState({\n    accesstoken: localStorage.getItem(\"apiKey\"),\n    isAdmin: false,\n    isSuper: false,\n    id: \"\"\n  })\n\n  let Login = async (details) => {\n    let url = config.baseUrl+\"/api/members/login\"\n    console.log(url);\n    const response = await fetch(url, {\n      method: 'POST', // *GET, POST, PUT, DELETE, etc.\n      mode: 'cors', // no-cors, *cors, same-origin\n      cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n      // credentials: 'include', // include, *same-origin, omit\n      headers: {\n        'Content-Type': 'application/json'\n        // 'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: JSON.stringify(details)\n    })\n    let body = await response.json()\n    if (body.success) {\n      console.log(\"Success\")\n      console.log(\"details\", details)\n      console.log(details.username)\n      console.log(body.response)\n      setUser({\n        accesstoken: JSON.stringify(body.response),\n        isAdmin: body.isAdmin,\n        isSuper: body.isSuper,\n        id: body.id\n      })\n      console.log(\"body\", body);\n      console.log(user)\n      localStorage.setItem(\"apiKey\", JSON.stringify(body.response))\n      localStorage.setItem(\"user\", JSON.stringify({\n        accesstoken: JSON.stringify(body.response),\n        isAdmin: body.isAdmin,\n        isSuper: body.isSuper,\n        id: body.id\n      }))\n      console.log(localStorage.getItem(\"apiKey\"))\n    } else {\n      console.log(body)\n    }\n  }\n\n  let Logout = () => {\n    console.log(\"Log out\")\n    localStorage.removeItem(\"apiKey\")\n    localStorage.removeItem(\"user\")\n    console.log(localStorage.getItem(\"apiKey\"))\n    setUser({\n      accesstoken: \"\",\n      username: \"\"\n    }\n    )\n    \n  }\n\n  return (\n    <div id=\"wrapper\">\n      {\n        user.accesstoken? (<Router>\n          <Nav Logout={Logout}></Nav>\n          <div className=\"d-flex flex-column\" id=\"content-wrapper\">\n\n              <div id=\"content\">\n                <Switch>\n                  <Route path='/' exact component={Home}></Route>\n                  <Route path='/members' exact component={Members}></Route>\n                  <Route path=\"/images\" exact component={Images}></Route>\n                  <Route path=\"/events\" exact component={Events} ></Route>\n                  <Route path=\"/profile\" exact component={Profile}></Route>\n                  {/*<Route path=\"/categories\" exact component={Categories}></Route>*/}\n                  <Route path=\"/types\" exact component={Types}></Route> \n                </Switch>\n              </div>\n\n          </div>\n          \n      </Router>) : <LoginPage login={Login} logout={Logout}></LoginPage>\n      }\n      \n      \n    </div>\n  );\n}\n\nexport default App;\n","/Users/akashaki/personalProjects/AdminPanel/src/reportWebVitals.js",[],"/Users/akashaki/personalProjects/AdminPanel/src/components/nav/Nav.js",["111"],"/Users/akashaki/personalProjects/AdminPanel/src/components/LoginPage/LoginPage.js",["112","113","114","115","116","117","118","119"],"import React, {useState} from 'react'\nimport { Link } from 'react-router-dom'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Login from './Login';\nimport Create from '../members/Create';\n\nfunction LoginPage({login, logout}) {\n    let [options,setOptions] = useState(0)\n    \n    return (\n        <div className=\"container\">\n\n        <div className=\"row justify-content-center\">\n\n            <div className=\"col-xl-10 col-lg-12 col-md-9\">\n                <div className=\"card o-hidden border-0 shadow-lg my-5\">\n                    <div className=\"card-body p-0\">\n                        <div className=\"row\">\n                            <div className=\"col-lg-6 d-none d-lg-block bg-login-image\"></div>\n                            <div className=\"col-lg-6\">\n                                {options == 0? <Login login={login}></Login>:''}\n                                {options == 1? <Create setOptions={setOptions}></Create>:''}\n                                <div className='row'>\n                                    {options != 0? <button className=\"btn btn-link\" onClick={()=>setOptions(0)}>Log in</button>:''}\n                                    {options != 1? <button className=\"btn btn-link\" onClick={()=>setOptions(1)}>New User</button>:''}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    </div>\n    )\n}\n\nexport default LoginPage\n","/Users/akashaki/personalProjects/AdminPanel/src/components/home/Home.js",[],"/Users/akashaki/personalProjects/AdminPanel/src/components/images/Images.js",["120","121","122","123"],"import React, {useEffect, useState, useRef} from 'react'\nimport config from '../../config.json'\nimport ImagesTableItem from './imagesTableItem'\n\nfunction Images() {\n    const [images, setimages] = useState([])\n    const [details, setDetails] = useState({\n        url: \"\",\n    })\n    let form = useRef(null)\n    let key = JSON.parse(localStorage.getItem(\"apiKey\"))\n\n    let url = config.baseUrl+\"/api/images\"\n\n    let formData = new FormData()\n\n    let fetchData = async(url) =>{\n        let response = await fetch(url, {\n            method: 'GET', // *GET, POST, PUT, DELETE, etc.\n            mode: 'cors', // no-cors, *cors, same-origin\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n            // credentials: 'include', // include, *same-origin, omit\n            headers: {\n              'Content-Type': 'application/json',\n              \"Authorization\": key\n            //   'Content-Type': 'application/x-www-form-urlencoded',\n            },\n          })\n        let resp = await response.json()\n        return resp\n    }\n    \n    let postData = async(url, formData) =>{\n        console.log(formData)\n        let response = await fetch(url, {\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\n            mode: 'cors', // no-cors, *cors, same-origin\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n            // credentials: 'include', // include, *same-origin, omit\n            headers: {\n            //   'Content-Type': 'multipart/form-data',\n              \"Authorization\": key\n            //   'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            body: formData\n          })\n        let resp = await response.json()\n        return resp\n    }\n\n    let deleteData = async(url) => {\n        let response = await fetch(url, {\n            method: 'DELETE',\n            mode: 'cors',\n            headers: {\n                'Content-Type': 'application/json',\n                \"Authorization\": key\n            }\n        })\n    }\n\n    useEffect(()=>{\n        fetchData(url+\"/all\").then(async(response)=>{\n            console.log(\"response\",response)\n            if (response.success){\n                console.log(response.response)\n                setimages(response.response)\n            } else {\n                console.log(\"unable to fetch data!\")\n            }\n            \n        })\n    }, [])\n\n   \n\n    async function deleteItem(item) {\n        deleteData(url+\"/\"+item._id).then( ()=>{\n            setimages(images.filter((category)=> category._id !== item._id))\n            console.log(\"Delete is being called!\", item._id\n            )})\n    }\n\n    let submitHandler = (e) => {\n        // console.log(\"current form:\",e.target.imgFIle)\n        let formData = new FormData(e.target)\n        e.target.imgFile.value = null\n        // console.log(formData, \"here is the form\")\n        e.preventDefault();\n        console.log(\"This is here\",details)\n        postData(url+\"/create\", formData).then(async(response)=> {\n            if(response.success) {\n                setimages([response.response])\n            } else {\n                console.log(response)\n                console.log(\"Cannot create\")\n            }\n            \n        })\n        \n        console.log(details)\n    }\n\n    const handleImageUpload = event => {\n        console.log(\"inside onChange!\")\n        const files = event.target.files\n        console.log(files[0])\n        const formData = new FormData()\n        formData.append('imgFile', files[0])\n      }\n\n    return (\n        <div className=\"container-fluid\">\n                    <h1 className=\"h3 mb-2 text-gray-800 heading\">Upload the menu card in .pdf format</h1>\n\n                    <form className=\"user\" ref={form} onSubmit={submitHandler}>\n                        <div className=\"form-group\">\n                            <input type=\"file\" name=\"imgFile\" className=\"form-control-user\"\n                                id=\"exampleInputEmail\" aria-describedby=\"emailHelp\" onChange={event => handleImageUpload(event)}\n                                placeholder=\"Enter Service Name...\" required></input>\n                        </div>\n                        <button type=\"submit\" onSubmit={submitHandler} className=\"btn btn-primary btn-user btn-block\">\n                            Upload\n                        </button>\n                    </form>\n\n                    <h1 className=\"h3 mb-2 text-gray-800 heading\">Menu</h1>\n\n                    <div className=\"card shadow mb-4\">\n                        <div className=\"card-header py-3\">\n                            <h6 className=\"m-0 font-weight-bold text-primary\">Current</h6>\n                        </div>\n                        <div className=\"card-body\">\n                                <table cellspacing=\"0\">\n                                    {/* <thead>\n                                        <tr>\n                                            <th>Name</th>\n                                            <th>Delete</th>\n                                        </tr>\n                                    </thead>\n                                     */}\n                                        {images.map((item)=>(\n                                            <ImagesTableItem key={item._id} item={item} remove={deleteItem}></ImagesTableItem>\n                                        ))}\n                                </table>\n                        </div>\n                    </div>\n        </div>)\n}\n\nexport default Images\n","/Users/akashaki/personalProjects/AdminPanel/src/components/images/imagesTableItem.js",["124"],"import React from 'react'\nimport config from '../../config.json'\nfunction ImagesTableItem({item, remove}) {\n    console.log(\"here\", item)\n\n    let menuHandler = ()=> {\n        window.location.href = config.baseUrl + \"/\" + item.url;\n    }\n\n    return (\n        <tr className=\"row\">\n            <td className=\"col-6\"><a onClick={menuHandler}>Click Here to view the menu card</a></td>\n            <td className=\"col-3\"><button className=\"btn btn-danger\" onClick={()=>{remove(item)}}>Delete</button></td>\n            \n        </tr>\n    )\n}\n\nexport default ImagesTableItem\n","/Users/akashaki/personalProjects/AdminPanel/src/components/members/Members.js",["125","126"],"import React, {useState, useEffect} from 'react'\nimport config from '../../config.json'\nimport EventsTable from './MembersTableItem'\nimport CsvDownload from 'react-json-to-csv'\n\nfunction Members(user) {\n        // console.log(user)\n        let BaseUrl = config.baseUrl + \"/api/members\"\n        let MembersUrl = config.baseUrl + \"/api/members/all\"\n\n        const [members, setMembers] = useState([])\n        \n        let key = JSON.parse(localStorage.getItem(\"apiKey\"))\n\n        let fetchData = async(url) =>{\n            let response = await fetch(url, {\n                method: 'GET', // *GET, POST, PUT, DELETE, etc.\n                mode: 'cors', // no-cors, *cors, same-origin\n                cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n                // credentials: 'include', // include, *same-origin, omit\n                headers: {\n                  'Content-Type': 'application/json',\n                  \"Authorization\": key\n                //   'Content-Type': 'application/x-www-form-urlencoded',\n                },\n              })\n            let resp = await response.json()\n            return resp\n        }\n\n        let deleteItem = async (url) => {\n            let response = await fetch(url, {\n                method: 'DELETE', // *GET, POST, PUT, DELETE, etc.\n                mode: 'cors', // no-cors, *cors, same-origin\n                cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n                // credentials: 'include', // include, *same-origin, omit\n                headers: {\n                  'Content-Type': 'application/json',\n                  \"Authorization\": key\n                //   'Content-Type': 'application/x-www-form-urlencoded',\n                },\n              })\n            let resp = await response.json()\n            return resp\n        }\n\n        const [csvData, setCsvData] = useState([]);\n\n        async function makeCSV(response) {\n            let arr = [];\n            response.map((item)=> {\n                let obj = {};\n                obj.Name = item.first_name;\n                obj.Phone = item.phone_number;\n                arr.push(obj);\n            })\n            setCsvData(arr);\n        }\n\n        useEffect(()=>{\n            fetchData(MembersUrl).then((response)=>{\n                console.log(response);\n                if (response.success) {\n\n                    let resp = response.response;\n                    \n                    makeCSV(resp);\n\n                    console.log(\"success\",response)\n                    setMembers(response.response)\n\n            } else {\n                console.log(response)\n            }    \n        })},[])\n\n        \n        async function removeItem(item){\n            let response = await deleteItem(BaseUrl+\"/\"+item._id)\n            if(response.success){\n                setMembers(members.filter((lead)=>lead._id !== item._id))\n            } else {\n                console.log(\"Cannot delete\")\n            }\n        }\n\n        \n\n        \n\n\n    return (\n        <div className=\"container-fluid\">\n\n                    <h1 className=\"h3 mb-2 text-gray-800 heading\">Members Table</h1> <CsvDownload data={csvData} />\n\n                    <div className=\"card shadow mb-4\">\n                        <div className=\"card-header py-3\">\n                            <h6 className=\"m-0 font-weight-bold text-primary\">Members</h6>\n                        </div>\n                                <div className=\"container\" width=\"100%\">\n                                    \n                                    {members.map((item)=>(\n                                        <EventsTable key={item._id} item={item} remove={removeItem}></EventsTable>\n                                    ))}\n                                </div>\n                    </div>\n\n    </div>\n                \n                \n    )\n}\n\nexport default Members\n","/Users/akashaki/personalProjects/AdminPanel/src/components/members/MembersTableItem.js",["127"],"import React from 'react'\nimport config from '../../config.json'\n\nfunction MembersTableItem({item, remove, accept}) {\n    console.log(item)\n    return (\n        // <tr>\n        //     <td>{item.first_name+\" \"+item.last_name}</td>\n        //     <td>{item.email}</td>\n        //     <td>{item.address}</td>\n        //     <td>{item.phone_number}</td>\n        //     <td><ul>{item.requirements.map((requirement) => (\n        //         <li>{requirement.name}</li>\n        //     ))}</ul></td>\n        //     <td>{item.description}</td>\n        //     <td><button className=\"btn btn-success\" onClick={()=>{accept(item)}}>Accept</button>\n        //     <button className=\"btn btn-danger\" onClick={()=>{remove(item)}}>Delete</button>\n        //     </td>\n        // </tr>\n        <div className=\"card\">\n            <div className=\"card-body row\">\n                <div className=\"col-2\">\n                    <p><strong>Name</strong> : {item.firstName + \" \" + item.lastName}</p> \n                </div>\n                <div className=\"col-2\">\n                    <p><strong>Email</strong> : {item.email}</p> \n                </div>\n                <div className=\"col-2\">\n                    <p><strong>Phone</strong> : {item.phoneNumber}</p> \n                </div>\n                <div className=\"col-2\">\n                    <p><strong>batch</strong> : {item.batch}</p> \n                </div>\n                <div className=\"col-4\">\n                    {accept?<button className=\"btn btn-success\" onClick={()=>{accept(item)}}>Accept</button>:\"\"}\n                    <button className=\"btn btn-danger\" onClick={()=>{remove(item)}}>Delete</button>\n                </div>\n            </div>\n            <div className=\"card-body row\">\n                <div className=\"col-2\">\n                    <p><strong>Photo</strong> : {item.image}</p> \n                </div>\n                <div className=\"col-2\">\n                    <p><strong>Position</strong> : {item.position}</p> \n                </div>\n            </div>\n        </div>\n        \n    )\n}\n\nexport default MembersTableItem\n","/Users/akashaki/personalProjects/AdminPanel/src/components/members/Create.js",["128","129","130"],"import React, {useState, useEffect} from 'react'\nimport config from '../../config.json'\n\nfunction Create({setOptions}) {\n    let BaseUrl = config.baseUrl + \"/api/members\"\n    let key = JSON.parse(localStorage.getItem(\"apiKey\"))\n\n    const [details, setDetails] = useState({})\n\n    let submitHandler = (e) => {\n        e.preventDefault();\n        console.log(details)\n        Signup(details)\n    }\n\n    let Signup = async (details) => {\n        let url = config.baseUrl+\"/api/members/create\"\n        console.log(url);\n        const response = await fetch(url, {\n          method: 'POST', // *GET, POST, PUT, DELETE, etc.\n          mode: 'cors', // no-cors, *cors, same-origin\n          cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n          // credentials: 'include', // include, *same-origin, omit\n          headers: {\n            'Content-Type': 'application/json'\n            // 'Content-Type': 'application/x-www-form-urlencoded',\n          },\n          body: JSON.stringify(details)\n        })\n        let body = await response.json()\n        if (body.success) {\n          console.log(\"Success\")\n          console.log(\"details\", details)\n          console.log(details.username)\n          console.log(body.response)\n          setOptions(0)\n        } else {\n          console.log(body)\n        }\n    }\n\n    return (\n        \n            <div className=\"p-5\">\n                <div className=\"text-center\">\n                    <h1 className=\"h4 text-gray-900 mb-4\">Register!</h1>\n                </div>\n                <form className=\"user\" onSubmit={submitHandler}>\n                    <div className=\"form-group\">\n                        <input type=\"text\" name=\"firstName\" className=\"form-control form-control-user\"\n                            id=\"exampleInputEmail\" aria-describedby=\"emailHelp\" onChange={e => {setDetails({...details, firstName: e.target.value})}}\n                            value={details.username}\n                            placeholder=\"Enter first name...\" required></input>\n                    </div>\n                    <div className=\"form-group\">\n                        <input type=\"text\" name=\"lastName\" className=\"form-control form-control-user\"\n                            id=\"exampleInputEmail\" aria-describedby=\"emailHelp\" onChange={e => {setDetails({...details, lastName: e.target.value})}}\n                            value={details.username}\n                            placeholder=\"Enter last name...\" required></input>\n                    </div>\n                    <div className=\"form-group\">\n                        <input type=\"text\" name=\"userName\" className=\"form-control form-control-user\"\n                            id=\"exampleInputEmail\" aria-describedby=\"emailHelp\" onChange={e => {setDetails({...details, userName: e.target.value})}}\n                            value={details.username}\n                            placeholder=\"Enter username...\" required></input>\n                    </div>\n                    <div className=\"form-group\">\n                        <input type=\"password\" name=\"password\" className=\"form-control form-control-user\" onChange={e => {setDetails({...details, password: e.target.value})}}\n                            value={details.password}\n                            id=\"exampleInputPassword\" placeholder=\"Password...\"></input>\n                    </div>\n                    <div className=\"form-group\">\n                        <input type=\"number\" name=\"phoneNumber\" className=\"form-control form-control-user\" onChange={e => {setDetails({...details, phoneNumber: e.target.value})}}\n                            value={details.phoneNumber}\n                            id=\"exampleInputPassword\" placeholder=\"Phone number\"></input>\n                    </div>\n                    <div className=\"form-group\">\n                        <input type=\"number\" name=\"batch\" className=\"form-control form-control-user\" onChange={e => {setDetails({...details, batch: e.target.value})}}\n                            value={details.batch}\n                            id=\"exampleInputPassword\" placeholder=\"Batch\"></input>\n                    </div>\n                    <div className=\"form-group\">\n                        <input type=\"text\" name=\"position\" className=\"form-control form-control-user\" onChange={e => {setDetails({...details, position: e.target.value})}}\n                            value={details.position}\n                            id=\"exampleInputPassword\" placeholder=\"Position\"></input>\n                    </div>\n                    <div className=\"form-group\">\n                        <input type=\"text\" name=\"description\" className=\"form-control form-control-user\" onChange={e => {setDetails({...details, description: e.target.value})}}\n                            value={details.description}\n                            id=\"exampleInputPassword\" placeholder=\"Last Year's team or other details\"></input>\n                    </div>\n                    <button type=\"submit\" className=\"btn btn-primary btn-user btn-block\">\n                        Create\n                    </button>\n                </form>\n            </div>\n    )\n}\nexport default Create","/Users/akashaki/personalProjects/AdminPanel/src/components/LoginPage/Login.js",[],"/Users/akashaki/personalProjects/AdminPanel/src/components/events/Events.js",["131","132","133","134","135","136","137","138","139","140"],"/Users/akashaki/personalProjects/AdminPanel/src/components/events/EventsTableItem.js",["141"],"/Users/akashaki/personalProjects/AdminPanel/src/components/events/Create.js",["142","143"],"/Users/akashaki/personalProjects/AdminPanel/src/components/types/Types.js",["144","145"],"import React, {useState, useEffect} from 'react'\nimport TypesTableItem from './TypesTableItem'\nimport config from '../../config.json'\n\nfunction Types() {\n    const [types, settypes] = useState([])\n    const [details, setDetails] = useState({\n        name: \"\"\n    })\n\n    let key = JSON.parse(localStorage.getItem(\"apiKey\"))\n\n    let url = config.baseUrl+\"/api/types\"\n\n    let fetchData = async(url) =>{\n        let response = await fetch(url, {\n            method: 'GET', // *GET, POST, PUT, DELETE, etc.\n            mode: 'cors', // no-cors, *cors, same-origin\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n            // credentials: 'include', // include, *same-origin, omit\n            headers: {\n              'Content-Type': 'application/json',\n              \"Authorization\": key\n            //   'Content-Type': 'application/x-www-form-urlencoded',\n            },\n          })\n        let resp = await response.json()\n        return resp\n    }\n\n    let postData = async(url) =>{\n        let response = await fetch(url, {\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\n            mode: 'cors', // no-cors, *cors, same-origin\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n            // credentials: 'include', // include, *same-origin, omit\n            headers: {\n              'Content-Type': 'application/json',\n              \"Authorization\": key\n            //   'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            body: JSON.stringify(details)\n          })\n        let resp = await response.json()\n        return resp\n    }\n\n    let deleteData = async(url) => {\n        let response = await fetch(url, {\n            method: 'DELETE',\n            mode: 'cors',\n            headers: {\n                'Content-Type': 'application/json',\n                \"Authorization\": key\n            }\n        })\n    }\n\n    useEffect(()=>{\n        fetchData(url+\"/all\").then(async(response)=>{\n            console.log(\"response\",response)\n            if (response.success){\n                console.log(response.response)\n                settypes(response.response)\n            } else {\n                console.log(\"unable to fetch data!\")\n            }\n            \n        })\n    },[details])\n\n    \n\n    async function deleteItem(item) {\n        deleteData(url+\"/\"+item._id).then( ()=>{\n            settypes(types.filter((category)=> category._id !== item._id))\n            console.log(\"Delete is being called!\", item._id\n            )})\n    }\n\n    let submitHandler = (e) => {\n        e.preventDefault();\n        console.log(\"This is here\",details)\n        postData(url+\"/create\").then(async(response)=> {\n            if(response.success) {\n                settypes([...types,details])\n                e.target.name.value = null\n            } else {\n                console.log(response)\n                console.log(\"Cannot create\")\n            }\n            \n        })\n        setDetails({})\n        console.log(details)\n    }\n\n    return (\n        <div className=\"container-fluid\">\n                    <h1 className=\"h3 mb-2 text-gray-800 heading\">Add a Type</h1>\n\n                    <form className=\"user\" onSubmit={submitHandler}>\n                        <div className=\"form-group\">\n                            <input type=\"text\" name=\"name\" className=\"form-control form-control-user\"\n                                id=\"exampleInputEmail\" aria-describedby=\"emailHelp\" onChange={e => {setDetails({...details, name: e.target.value})}}\n                                value={details.name}\n                                placeholder=\"Enter Service Name...\" required></input>\n                        </div>\n                        <button type=\"submit\" onSubmit={submitHandler} className=\"btn btn-primary btn-user btn-block\">\n                            Create\n                        </button>\n                    </form>\n\n                    <h1 className=\"h3 mb-2 text-gray-800 heading\">Types</h1>\n\n                    <div className=\"card shadow mb-4\">\n                        <div className=\"card-header py-3\">\n                            <h6 className=\"m-0 font-weight-bold text-primary\">All Types</h6>\n                        </div>\n                        <div className=\"card-body\">\n                            <div className=\"table-responsive\">\n                                <table className=\"table table-bordered\" id=\"dataTable\" width=\"100%\" cellspacing=\"0\">\n                                    <thead>\n                                        <tr>\n                                            <th>Name</th>\n                                            <th>Delete</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {types.map((item)=>(\n                                            <TypesTableItem key={item._id} item={item} remove={deleteItem}></TypesTableItem>\n                                        ))}\n                                        \n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n        </div>)\n}\n\nexport default Types\n","/Users/akashaki/personalProjects/AdminPanel/src/components/types/TypesTableItem.js",[],"/Users/akashaki/personalProjects/AdminPanel/src/components/events/EventPage.js",["146","147","148","149","150","151","152"],"/Users/akashaki/personalProjects/AdminPanel/src/components/members/Profile.js",["153","154","155","156"],"import React, {useState, useEffect, useRef} from 'react';\nimport config from '../../config.json'\n\nfunction Profile() {\n    let user = JSON.parse(localStorage.getItem(\"user\"))\n    console.log(\"user: \", user.accesstoken)\n    const [member, setMember] = useState({})\n    let MembersUrl = config.baseUrl+\"/api/members\";\n    console.log(\"akash\")\n    let imageUrl = config.baseUrl+\"/api/images\";\n    let form = useRef(null);\n    const [details, setDetails] = useState({\n        url: \"\",\n    })\n    const [editForm, setEditForm] = useState()\n\n    let fetchData = async(url) =>{\n        let response = await fetch(url, {\n            method: 'GET', // *GET, POST, PUT, DELETE, etc.\n            mode: 'cors', // no-cors, *cors, same-origin\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n            // credentials: 'include', // include, *same-origin, omit\n            headers: {\n              'Content-Type': 'application/json',\n              \"Authorization\": JSON.parse(user.accesstoken)\n            //   'Content-Type': 'application/x-www-form-urlencoded',\n            },\n          })\n        let resp = await response.json()\n        return resp\n    }\n\n    let editData = async(url, editForm) =>{\n        let response = await fetch(url, {\n            method: 'PUT', // *GET, POST, PUT, DELETE, etc.\n            mode: 'cors', // no-cors, *cors, same-origin\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n            // credentials: 'include', // include, *same-origin, omit\n            headers: {\n              'Content-Type': 'application/json',\n              \"Authorization\": JSON.parse(user.accesstoken)\n            //   'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            body: JSON.stringify(editForm)\n          })\n        let resp = await response.json()\n        if (resp.success)\n            setMember(resp.response)\n    }\n\n    let postImageData = async(url, formData) =>{\n        console.log(formData)\n        let response = await fetch(url, {\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\n            mode: 'cors', // no-cors, *cors, same-origin\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n            // credentials: 'include', // include, *same-origin, omit\n            headers: {\n            //   'Content-Type': 'multipart/form-data',\n              \"Authorization\": JSON.parse(user.accesstoken)\n            //   'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            body: formData\n          })\n        let resp = await response.json()\n        return resp\n    }\n\n    useEffect(()=>{\n            fetchData(MembersUrl+\"/\"+user.id).then((response)=>{\n                console.log(response);\n                if (response.success) {\n\n                    let resp = response.response;\n\n                    console.log(\"success\",response)\n                    setMember(response.response)\n\n            } else {\n                console.log(response)\n            } \n        })\n    }, [])\n\n    let imageSubmitHandler = (e) => {\n        // console.log(\"current form:\",e.target.imgFIle)\n        let formData = new FormData(e.target)\n        e.target.imgFile.value = null\n        // console.log(formData, \"here is the form\")\n        e.preventDefault();\n        console.log(\"This is here\",details)\n        postImageData(imageUrl+\"/create\", formData).then(async(response)=> {\n            if(response.success) {\n                setDetails(response.response);\n                console.log(response);\n                editData(MembersUrl+\"/\"+user.id, {image: response.response._id})\n            } else {\n                console.log(response)\n                console.log(\"Cannot create\")\n            }\n            \n        })\n        \n       \n    }\n\n    const handleImageUpload = event => {\n        console.log(\"inside onChange!\")\n        const files = event.target.files\n        console.log(files[0])\n        const formData = new FormData()\n        formData.append('imgFile', files[0])\n      }\n\n    return <div className=\"container-fluid\">\n\n    <h1 className=\"h3 mb-2 text-gray-800 heading\">{member.firstName+\" \"+member.lastName}</h1>\n\n    <div className=\"card shadow mb-4\">\n        <img src={member.image? config.baseUrl+\"/\"+member.image.url: ''} className=\"img-fluid\" alt=\"...\"></img>\n        <form className=\"user\" ref={form} onSubmit={imageSubmitHandler}>\n                        <div className=\"form-group\">\n                            <input type=\"file\" name=\"imgFile\" className=\"form-control-user\"\n                                id=\"exampleInputEmail\" aria-describedby=\"emailHelp\" onChange={event => handleImageUpload(event)}\n                                placeholder=\"Enter Service Name...\" required></input>\n                        </div>\n                        <button type=\"submit\" onSubmit={imageSubmitHandler} className=\"btn btn-primary btn-user btn-block\">\n                            Upload\n                        </button>\n        </form>\n        <div className=\"card-header py-3\">\n            <h6 className=\"m-0 font-weight-bold text-primary\">Username: {member.userName}</h6>\n        </div>\n        <div className=\"card-header py-3\">\n            <h6 className=\"m-0 font-weight-bold text-primary\">Phone number: {member.phoneNumber}</h6>\n        </div>\n        <div className=\"card-header py-3\">\n            <h6 className=\"m-0 font-weight-bold text-primary\">Batch: {member.batch}</h6>\n        </div>\n    </div>\n\n</div>\n}\nexport default Profile","/Users/akashaki/personalProjects/AdminPanel/src/components/events/EventOptions.js",["157"],"/Users/akashaki/personalProjects/AdminPanel/src/components/events/EditEvent.js",["158","159"],"/Users/akashaki/personalProjects/AdminPanel/src/components/events/ViewMembers.js",["160"],"/Users/akashaki/personalProjects/AdminPanel/src/components/events/Register.js",["161"],"/Users/akashaki/personalProjects/AdminPanel/src/components/events/ViewMembersTableItem.js",[],{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","severity":1,"message":"167","line":7,"column":8,"nodeType":"168","messageId":"169","endLine":7,"endColumn":14},{"ruleId":"166","severity":1,"message":"170","line":3,"column":8,"nodeType":"168","messageId":"169","endLine":3,"endColumn":11},{"ruleId":"166","severity":1,"message":"171","line":2,"column":10,"nodeType":"168","messageId":"169","endLine":2,"endColumn":14},{"ruleId":"166","severity":1,"message":"172","line":3,"column":27,"nodeType":"168","messageId":"169","endLine":3,"endColumn":33},{"ruleId":"166","severity":1,"message":"173","line":3,"column":35,"nodeType":"168","messageId":"169","endLine":3,"endColumn":41},{"ruleId":"166","severity":1,"message":"174","line":3,"column":43,"nodeType":"168","messageId":"169","endLine":3,"endColumn":48},{"ruleId":"175","severity":1,"message":"176","line":21,"column":42,"nodeType":"177","messageId":"178","endLine":21,"endColumn":44},{"ruleId":"175","severity":1,"message":"176","line":22,"column":42,"nodeType":"177","messageId":"178","endLine":22,"endColumn":44},{"ruleId":"175","severity":1,"message":"179","line":24,"column":46,"nodeType":"177","messageId":"178","endLine":24,"endColumn":48},{"ruleId":"175","severity":1,"message":"179","line":25,"column":46,"nodeType":"177","messageId":"178","endLine":25,"endColumn":48},{"ruleId":"166","severity":1,"message":"180","line":7,"column":21,"nodeType":"168","messageId":"169","endLine":7,"endColumn":31},{"ruleId":"166","severity":1,"message":"181","line":15,"column":9,"nodeType":"168","messageId":"169","endLine":15,"endColumn":17},{"ruleId":"166","severity":1,"message":"182","line":52,"column":13,"nodeType":"168","messageId":"169","endLine":52,"endColumn":21},{"ruleId":"183","severity":1,"message":"184","line":73,"column":8,"nodeType":"185","endLine":73,"endColumn":10,"suggestions":"186"},{"ruleId":"187","severity":1,"message":"188","line":12,"column":35,"nodeType":"189","endLine":12,"endColumn":60},{"ruleId":"190","severity":1,"message":"191","line":51,"column":32,"nodeType":"192","messageId":"193","endLine":51,"endColumn":34},{"ruleId":"183","severity":1,"message":"194","line":75,"column":13,"nodeType":"185","endLine":75,"endColumn":15,"suggestions":"195"},{"ruleId":"166","severity":1,"message":"196","line":2,"column":8,"nodeType":"168","messageId":"169","endLine":2,"endColumn":14},{"ruleId":"166","severity":1,"message":"197","line":1,"column":26,"nodeType":"168","messageId":"169","endLine":1,"endColumn":35},{"ruleId":"166","severity":1,"message":"198","line":5,"column":9,"nodeType":"168","messageId":"169","endLine":5,"endColumn":16},{"ruleId":"166","severity":1,"message":"199","line":6,"column":9,"nodeType":"168","messageId":"169","endLine":6,"endColumn":12},{"ruleId":"166","severity":1,"message":"200","line":17,"column":12,"nodeType":"168","messageId":"169","endLine":17,"endColumn":19},{"ruleId":"166","severity":1,"message":"201","line":17,"column":21,"nodeType":"168","messageId":"169","endLine":17,"endColumn":31},{"ruleId":"166","severity":1,"message":"182","line":77,"column":13,"nodeType":"168","messageId":"169","endLine":77,"endColumn":21},{"ruleId":"183","severity":1,"message":"184","line":100,"column":8,"nodeType":"185","endLine":100,"endColumn":10,"suggestions":"202"},{"ruleId":"183","severity":1,"message":"203","line":113,"column":8,"nodeType":"185","endLine":113,"endColumn":10,"suggestions":"204"},{"ruleId":"175","severity":1,"message":"176","line":142,"column":35,"nodeType":"177","messageId":"178","endLine":142,"endColumn":37},{"ruleId":"175","severity":1,"message":"176","line":160,"column":70,"nodeType":"177","messageId":"178","endLine":160,"endColumn":72},{"ruleId":"175","severity":1,"message":"176","line":176,"column":25,"nodeType":"177","messageId":"178","endLine":176,"endColumn":27},{"ruleId":"175","severity":1,"message":"176","line":179,"column":25,"nodeType":"177","messageId":"178","endLine":179,"endColumn":27},{"ruleId":"175","severity":1,"message":"176","line":180,"column":25,"nodeType":"177","messageId":"178","endLine":180,"endColumn":27},{"ruleId":"166","severity":1,"message":"205","line":4,"column":8,"nodeType":"168","messageId":"169","endLine":4,"endColumn":17},{"ruleId":"166","severity":1,"message":"206","line":1,"column":16,"nodeType":"168","messageId":"169","endLine":1,"endColumn":24},{"ruleId":"166","severity":1,"message":"197","line":1,"column":26,"nodeType":"168","messageId":"169","endLine":1,"endColumn":35},{"ruleId":"166","severity":1,"message":"182","line":49,"column":13,"nodeType":"168","messageId":"169","endLine":49,"endColumn":21},{"ruleId":"183","severity":1,"message":"184","line":70,"column":7,"nodeType":"185","endLine":70,"endColumn":16,"suggestions":"207"},{"ruleId":"166","severity":1,"message":"206","line":1,"column":16,"nodeType":"168","messageId":"169","endLine":1,"endColumn":24},{"ruleId":"166","severity":1,"message":"197","line":1,"column":26,"nodeType":"168","messageId":"169","endLine":1,"endColumn":35},{"ruleId":"208","severity":1,"message":"209","line":18,"column":9,"nodeType":"189","endLine":18,"endColumn":111},{"ruleId":"175","severity":1,"message":"176","line":24,"column":14,"nodeType":"177","messageId":"178","endLine":24,"endColumn":16},{"ruleId":"175","severity":1,"message":"176","line":25,"column":14,"nodeType":"177","messageId":"178","endLine":25,"endColumn":16},{"ruleId":"175","severity":1,"message":"176","line":26,"column":14,"nodeType":"177","messageId":"178","endLine":26,"endColumn":16},{"ruleId":"175","severity":1,"message":"176","line":27,"column":14,"nodeType":"177","messageId":"178","endLine":27,"endColumn":16},{"ruleId":"166","severity":1,"message":"210","line":15,"column":12,"nodeType":"168","messageId":"169","endLine":15,"endColumn":20},{"ruleId":"166","severity":1,"message":"211","line":15,"column":22,"nodeType":"168","messageId":"169","endLine":15,"endColumn":33},{"ruleId":"166","severity":1,"message":"212","line":74,"column":25,"nodeType":"168","messageId":"169","endLine":74,"endColumn":29},{"ruleId":"183","severity":1,"message":"213","line":83,"column":8,"nodeType":"185","endLine":83,"endColumn":10,"suggestions":"214"},{"ruleId":"175","severity":1,"message":"176","line":6,"column":37,"nodeType":"177","messageId":"178","endLine":6,"endColumn":39},{"ruleId":"166","severity":1,"message":"206","line":2,"column":10,"nodeType":"168","messageId":"169","endLine":2,"endColumn":18},{"ruleId":"166","severity":1,"message":"196","line":3,"column":8,"nodeType":"168","messageId":"169","endLine":3,"endColumn":14},{"ruleId":"166","severity":1,"message":"196","line":1,"column":8,"nodeType":"168","messageId":"169","endLine":1,"endColumn":14},{"ruleId":"166","severity":1,"message":"180","line":8,"column":21,"nodeType":"168","messageId":"169","endLine":8,"endColumn":31},"no-native-reassign",["215"],"no-negated-in-lhs",["216"],"no-unused-vars","'Create' is defined but never used.","Identifier","unusedVar","'App' is defined but never used.","'Link' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'setDetails' is assigned a value but never used.","'formData' is assigned a value but never used.","'response' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchData' and 'url'. Either include them or remove the dependency array.","ArrayExpression",["217"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'MembersUrl' and 'fetchData'. Either include them or remove the dependency array.",["218"],"'config' is defined but never used.","'useEffect' is defined but never used.","'BaseUrl' is assigned a value but never used.","'key' is assigned a value but never used.","'members' is assigned a value but never used.","'setMembers' is assigned a value but never used.",["219"],"React Hook useEffect has missing dependencies: 'fetchData' and 'typesUrl'. Either include them or remove the dependency array.",["220"],"'EventPage' is defined but never used.","'useState' is defined but never used.",["221"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'editForm' is assigned a value but never used.","'setEditForm' is assigned a value but never used.","'resp' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'MembersUrl', 'fetchData', and 'user.id'. Either include them or remove the dependency array.",["222"],"no-global-assign","no-unsafe-negation",{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},{"desc":"223","fix":"227"},{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},"Update the dependencies array to be: [fetchData, url]",{"range":"234","text":"235"},"Update the dependencies array to be: [MembersUrl, fetchData]",{"range":"236","text":"237"},{"range":"238","text":"235"},"Update the dependencies array to be: [fetchData, typesUrl]",{"range":"239","text":"240"},"Update the dependencies array to be: [details, fetchData, url]",{"range":"241","text":"242"},"Update the dependencies array to be: [MembersUrl, fetchData, user.id]",{"range":"243","text":"244"},[2421,2423],"[fetchData, url]",[2673,2675],"[MembersUrl, fetchData]",[3523,3525],[3897,3899],"[fetchData, typesUrl]",[2308,2317],"[details, fetchData, url]",[3078,3080],"[MembersUrl, fetchData, user.id]"]