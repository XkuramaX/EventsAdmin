{"ast":null,"code":"var _jsxFileName = \"/Users/akashaki/personalProjects/AdminPanel/src/components/events/ViewMembersTableItem.js\";\nimport config from '../../config.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ViewMembersTableItem({\n  event,\n  item\n}) {\n  let imageUrl = config.baseUrl + \"/api/images\";\n  let eventUrl = config.baseUrl + \"/api/events\";\n  console.log(\"item\", item);\n  let user = JSON.parse(localStorage.getItem(\"user\"));\n  let data = {\n    _id: item._id,\n    name: item.member.firstName + \" \" + item.member.lastName,\n    batch: item.member.batch,\n    position: item.member.position,\n    url: item.transaction.image ? item.transaction.image : \"\",\n    approved: item.confirm\n  };\n\n  let openImage = async id => {\n    // href={config.baseUrl+\"/\"+data.url}\n    let response = await fetch(imageUrl + \"/\" + id, {\n      method: 'GET',\n      // *GET, POST, PUT, DELETE, etc.\n      mode: 'cors',\n      // no-cors, *cors, same-origin\n      cache: 'no-cache',\n      // *default, no-cache, reload, force-cache, only-if-cached\n      // credentials: 'include', // include, *same-origin, omit\n      headers: {\n        'Content-Type': 'application/json',\n        \"Authorization\": JSON.parse(user.accesstoken) //   'Content-Type': 'application/x-www-form-urlencoded',\n\n      }\n    });\n    response = await response.json();\n\n    if (response.success) {\n      window.open(config.baseUrl + \"/\" + response.response.url);\n    }\n  };\n\n  let approveRegistration = async id => {\n    let response = await fetch(eventUrl + \"/\" + id, {\n      method: 'GET',\n      // *GET, POST, PUT, DELETE, etc.\n      mode: 'cors',\n      // no-cors, *cors, same-origin\n      cache: 'no-cache',\n      // *default, no-cache, reload, force-cache, only-if-cached\n      // credentials: 'include', // include, *same-origin, omit\n      headers: {\n        'Content-Type': 'application/json',\n        \"Authorization\": JSON.parse(user.accesstoken) //   'Content-Type': 'application/x-www-form-urlencoded',\n\n      }\n    });\n    response = await response.json();\n\n    if (response.success) {\n      let event = response.response;\n      let registrations = [];\n      event.registrations.forEach(registration => {\n        if (item.member._id === registration.member) {\n          registration.confirm = true;\n        }\n\n        registrations.push(registration);\n      });\n      data = {\n        registrations: registrations\n      };\n      response = await fetch(eventUrl + \"/\" + id, {\n        method: 'PUT',\n        // *GET, POST, PUT, DELETE, etc.\n        mode: 'cors',\n        // no-cors, *cors, same-origin\n        cache: 'no-cache',\n        // *default, no-cache, reload, force-cache, only-if-cached\n        // credentials: 'include', // include, *same-origin, omit\n        headers: {\n          'Content-Type': 'application/json',\n          \"Authorization\": JSON.parse(user.accesstoken) //   'Content-Type': 'application/x-www-form-urlencoded',\n\n        },\n        body: JSON.stringify(data)\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: data.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 37\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: data.batch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 37\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: data.position\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 37\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-link\",\n        onClick: () => {\n          openImage(data.url);\n        },\n        children: \"Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 41\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 37\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: () => {\n          approveRegistration(event._id);\n        },\n        disabled: data.approved,\n        children: \"Approve\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 41\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 37\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-danger\",\n        children: \"Remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 41\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 37\n    }, this)]\n  }, data._id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 35\n  }, this);\n}\n\n_c = ViewMembersTableItem;\nexport default ViewMembersTableItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewMembersTableItem\");","map":{"version":3,"sources":["/Users/akashaki/personalProjects/AdminPanel/src/components/events/ViewMembersTableItem.js"],"names":["config","ViewMembersTableItem","event","item","imageUrl","baseUrl","eventUrl","console","log","user","JSON","parse","localStorage","getItem","data","_id","name","member","firstName","lastName","batch","position","url","transaction","image","approved","confirm","openImage","id","response","fetch","method","mode","cache","headers","accesstoken","json","success","window","open","approveRegistration","registrations","forEach","registration","push","body","stringify"],"mappings":"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","sourcesContent":["import config from '../../config.json'\n\n\nfunction ViewMembersTableItem ({event, item}) {\n    let imageUrl = config.baseUrl + \"/api/images\"\n    let eventUrl = config.baseUrl + \"/api/events\"\n\n    console.log(\"item\", item)\n    let user = JSON.parse(localStorage.getItem(\"user\"))\n    let data = {\n        _id: item._id,\n        name: item.member.firstName + \" \" + item.member.lastName,\n        batch: item.member.batch,\n        position: item.member.position,\n        url: item.transaction.image?item.transaction.image:\"\",\n        approved: item.confirm\n    }\n\n    let openImage = async (id) => {\n        // href={config.baseUrl+\"/\"+data.url}\n        let response = await fetch(imageUrl+\"/\"+id, {\n            method: 'GET', // *GET, POST, PUT, DELETE, etc.\n            mode: 'cors', // no-cors, *cors, same-origin\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n            // credentials: 'include', // include, *same-origin, omit\n            headers: {\n              'Content-Type': 'application/json',\n              \"Authorization\": JSON.parse(user.accesstoken)\n            //   'Content-Type': 'application/x-www-form-urlencoded',\n            },\n        })\n        response = await response.json();\n        if (response.success) {\n            window.open(config.baseUrl+\"/\"+response.response.url);\n        }\n    }\n\n    let approveRegistration = async (id) => {\n        let response = await fetch(eventUrl+\"/\"+id,{\n            method: 'GET', // *GET, POST, PUT, DELETE, etc.\n            mode: 'cors', // no-cors, *cors, same-origin\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n            // credentials: 'include', // include, *same-origin, omit\n            headers: {\n              'Content-Type': 'application/json',\n              \"Authorization\": JSON.parse(user.accesstoken)\n            //   'Content-Type': 'application/x-www-form-urlencoded',\n            },\n        })\n        response = await response.json();\n        if (response.success) {\n            let event = response.response;\n            let registrations = []\n            event.registrations.forEach((registration) => {\n                if (item.member._id === registration.member) {\n                    registration.confirm = true;\n                }\n                registrations.push(registration)\n            });\n            data = {\n                registrations: registrations\n            };\n            response = await fetch(eventUrl+\"/\"+id,{\n                method: 'PUT', // *GET, POST, PUT, DELETE, etc.\n                mode: 'cors', // no-cors, *cors, same-origin\n                cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n                // credentials: 'include', // include, *same-origin, omit\n                headers: {\n                  'Content-Type': 'application/json',\n                  \"Authorization\": JSON.parse(user.accesstoken)\n                //   'Content-Type': 'application/x-www-form-urlencoded',\n                },\n                body: JSON.stringify(data)\n            })\n            \n        }\n    }\n\n    return                        <tr key={data._id}>\n                                    <td>{data.name}</td>\n                                    <td>{data.batch}</td>\n                                    <td>{data.position}</td>\n                                    <td><button className='btn btn-link' onClick={()=>{openImage(data.url)}}>Image</button></td>\n                                    <td><button className='btn btn-primary' onClick={()=>{approveRegistration(event._id)}} disabled={data.approved}>Approve</button></td>\n                                    <td><button className='btn btn-danger'>Remove</button></td>\n                                  </tr>  \n}\n\nexport default ViewMembersTableItem"]},"metadata":{},"sourceType":"module"}