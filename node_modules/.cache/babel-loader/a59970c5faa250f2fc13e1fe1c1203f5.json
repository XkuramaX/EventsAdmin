{"ast":null,"code":"var _jsxFileName = \"/Users/akashaki/personalProjects/AdminPanel/src/components/events/Create.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport config from '../../config.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Create({\n  submitHandler,\n  setDetails,\n  details,\n  types\n}) {\n  _s();\n\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  let form = useRef(null);\n\n  const handleImageUpload = event => {\n    console.log(\"inside onChange!\");\n    const files = event.target.files;\n    console.log(files[0]);\n    const formData = new FormData();\n    formData.append('imgFile', files[0]);\n  };\n\n  let imageUrl = config.baseUrl + \"/api/images\";\n\n  let imageSubmitHandler = e => {\n    // console.log(\"current form:\",e.target.imgFIle)\n    let formData = new FormData(e.target);\n    e.target.imgFile.value = null; // console.log(formData, \"here is the form\")\n\n    e.preventDefault();\n    console.log(\"This is here\", details);\n    postImageData(imageUrl + \"/create\", formData).then(async response => {\n      console.log(\"akashaki ::\", response);\n\n      if (response.success) {\n        setDetails({ ...details,\n          images: [response.response._id]\n        });\n      } else {\n        console.log(response);\n        console.log(\"Cannot create\");\n      }\n    });\n  };\n\n  let postImageData = async (url, formData) => {\n    console.log(formData);\n    let response = await fetch(url, {\n      method: 'POST',\n      // *GET, POST, PUT, DELETE, etc.\n      mode: 'cors',\n      // no-cors, *cors, same-origin\n      cache: 'no-cache',\n      // *default, no-cache, reload, force-cache, only-if-cached\n      // credentials: 'include', // include, *same-origin, omit\n      headers: {\n        //   'Content-Type': 'multipart/form-data',\n        \"Authorization\": JSON.parse(user.accesstoken) //   'Content-Type': 'application/x-www-form-urlencoded',\n\n      },\n      body: formData\n    });\n    let resp = await response.json();\n    return resp;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"user\",\n      ref: form,\n      onSubmit: imageSubmitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"imgFile\",\n          className: \"form-control-user\",\n          id: \"exampleInputEmail\",\n          \"aria-describedby\": \"emailHelp\",\n          onChange: event => handleImageUpload(event),\n          placeholder: \"Enter Service Name...\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onSubmit: imageSubmitHandler,\n        className: \"btn btn-primary btn-user btn-block\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"user\",\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          className: \"form-control form-control-user\",\n          id: \"exampleInputEmail\",\n          \"aria-describedby\": \"emailHelp\",\n          onChange: e => {\n            setDetails({ ...details,\n              name: e.target.value\n            });\n          },\n          value: details.name,\n          placeholder: \"Enter Item Name...\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          type: \"text\",\n          name: \"type\",\n          className: \"form-control\",\n          onChange: e => {\n            setDetails({ ...details,\n              type: e.target.value\n            });\n          },\n          placeholder: \"Select...\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            default: true,\n            children: \"None\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 37\n          }, this), types.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: type._id,\n            children: type.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 41\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"date\",\n          className: \"form-control form-control-user\",\n          id: \"exampleInputEmail\",\n          \"aria-describedby\": \"emailHelp\",\n          onChange: e => {\n            setDetails({ ...details,\n              date: e.target.value\n            });\n          },\n          value: details.date,\n          placeholder: \"Select Date\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          name: \"description\",\n          className: \"form-control form-control-user\",\n          id: \"exampleInputEmail\",\n          \"aria-describedby\": \"emailHelp\",\n          onChange: e => {\n            setDetails({ ...details,\n              details: e.target.value\n            });\n          },\n          value: details.description,\n          placeholder: \"Enter event Description...\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"price\",\n          className: \"form-control form-control-user\",\n          id: \"exampleInputEmail\",\n          \"aria-describedby\": \"emailHelp\",\n          onChange: e => {\n            setDetails({ ...details,\n              price: e.target.value\n            });\n          },\n          value: details.price,\n          placeholder: \"Enter Registration Fee...\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"upiId\",\n          className: \"form-control form-control-user\",\n          id: \"exampleInputEmail\",\n          \"aria-describedby\": \"emailHelp\",\n          onChange: e => {\n            setDetails({ ...details,\n              upiId: e.target.value\n            });\n          },\n          value: details.upiId,\n          placeholder: \"Enter upi Id...\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onSubmit: submitHandler,\n        className: \"btn btn-primary btn-user btn-block\",\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Create, \"dQhLC9DEDZP9Q6oVJIWRdCVKDdw=\");\n\n_c = Create;\nexport default Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["/Users/akashaki/personalProjects/AdminPanel/src/components/events/Create.js"],"names":["React","useState","useEffect","useRef","config","Create","submitHandler","setDetails","details","types","user","JSON","parse","localStorage","getItem","form","handleImageUpload","event","console","log","files","target","formData","FormData","append","imageUrl","baseUrl","imageSubmitHandler","e","imgFile","value","preventDefault","postImageData","then","response","success","images","_id","url","fetch","method","mode","cache","headers","accesstoken","body","resp","json","name","type","map","date","description","price","upiId"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef} from 'react'\n\nimport config from '../../config.json'\n\nfunction Create({submitHandler, setDetails, details, types}) {\n    const user = JSON.parse(localStorage.getItem(\"user\"))\n    let form = useRef(null);\n    const handleImageUpload = event => {\n        console.log(\"inside onChange!\")\n        const files = event.target.files\n        console.log(files[0])\n        const formData = new FormData()\n        formData.append('imgFile', files[0])\n      }\n    let imageUrl = config.baseUrl+\"/api/images\"\n      let imageSubmitHandler = (e) => {\n        // console.log(\"current form:\",e.target.imgFIle)\n        let formData = new FormData(e.target)\n        e.target.imgFile.value = null\n        // console.log(formData, \"here is the form\")\n        e.preventDefault();\n        console.log(\"This is here\",details)\n        postImageData(imageUrl+\"/create\", formData).then(async(response)=> {\n            console.log(\"akashaki ::\", response)\n            if(response.success) {\n                setDetails({...details,images: [response.response._id]});\n            } else {\n                console.log(response)\n                console.log(\"Cannot create\")\n            }\n        })\n        \n       \n    }\n\n    let postImageData = async(url, formData) =>{\n        console.log(formData)\n        let response = await fetch(url, {\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\n            mode: 'cors', // no-cors, *cors, same-origin\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n            // credentials: 'include', // include, *same-origin, omit\n            headers: {\n            //   'Content-Type': 'multipart/form-data',\n              \"Authorization\": JSON.parse(user.accesstoken)\n            //   'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            body: formData\n          })\n        let resp = await response.json()\n        return resp\n    }\n    \n    return <>\n    \n    <form className=\"user\" ref={form} onSubmit={imageSubmitHandler}>\n                        <div className=\"form-group\">\n                            <input type=\"file\" name=\"imgFile\" className=\"form-control-user\"\n                                id=\"exampleInputEmail\" aria-describedby=\"emailHelp\" onChange={event => handleImageUpload(event)}\n                                placeholder=\"Enter Service Name...\" required></input>\n                        </div>\n                        <button type=\"submit\" onSubmit={imageSubmitHandler} className=\"btn btn-primary btn-user btn-block\">\n                            Upload\n                        </button>\n        </form>\n    <form className=\"user\" onSubmit={submitHandler}>\n                        <div className=\"form-group\">\n                            <input type=\"text\" name=\"name\" className=\"form-control form-control-user\"\n                                id=\"exampleInputEmail\" aria-describedby=\"emailHelp\" onChange={e => {setDetails({...details, name: e.target.value})}}\n                                value={details.name}\n                                placeholder=\"Enter Item Name...\" required></input>\n                        </div>\n                        <div className=\"form-group\">\n                            <select type=\"text\" name=\"type\" className=\"form-control\" onChange={e => {setDetails({...details, type: e.target.value})}} placeholder=\"Select...\" >\n                                    <option value=\"\" default>None</option>\n                                    {types.map((type)=> (\n                                        <option value={type._id}>{type.name}</option>    \n                                    ))}\n                            </select>\n                        </div>\n                        <div className=\"form-group\">\n                            <input type=\"date\" name=\"date\" className=\"form-control form-control-user\"\n                                id=\"exampleInputEmail\" aria-describedby=\"emailHelp\" onChange={e => {setDetails({...details, date: e.target.value})}}\n                                value={details.date}\n                                placeholder=\"Select Date\" required></input>\n                        </div>\n                        <div className=\"form-group\">\n                            <textarea type=\"text\" name=\"description\" className=\"form-control form-control-user\" \n                                id=\"exampleInputEmail\" aria-describedby=\"emailHelp\" onChange={e => {setDetails({...details, details: e.target.value})}}\n                                value={details.description}\n                                placeholder=\"Enter event Description...\" required></textarea>\n                        </div>\n                        <div className=\"form-group\">\n                            <input type=\"number\" name=\"price\" className=\"form-control form-control-user\"\n                                id=\"exampleInputEmail\" aria-describedby=\"emailHelp\" onChange={e => {setDetails({...details, price: e.target.value})}}\n                                value={details.price}\n                                placeholder=\"Enter Registration Fee...\" required></input>\n                        </div>\n                        <div className=\"form-group\">\n                            <input type=\"text\" name=\"upiId\" className=\"form-control form-control-user\"\n                                id=\"exampleInputEmail\" aria-describedby=\"emailHelp\" onChange={e => {setDetails({...details, upiId: e.target.value})}}\n                                value={details.upiId}\n                                placeholder=\"Enter upi Id...\" required></input>\n                        </div>\n                        <button type=\"submit\" onSubmit={submitHandler} className=\"btn btn-primary btn-user btn-block\">\n                            Create\n                         </button>\n    </form>\n    </>\n}\n\nexport default Create"]},"metadata":{},"sourceType":"module"}