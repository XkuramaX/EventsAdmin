{"ast":null,"code":"var _jsxFileName = \"/Users/akashaki/personalProjects/AdminPanel/src/components/events/Register.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Register({\n  event,\n  setEvent\n}) {\n  _s();\n\n  let user = JSON.parse(localStorage.getItem(\"user\"));\n  const [details, setDetails] = useState({});\n\n  const handleImageUpload = event => {\n    console.log(\"inside onChange!\");\n    const files = event.target.files;\n    console.log(files[0]);\n    const formData = new FormData();\n    formData.append('imgFile', files[0]);\n  };\n\n  let imageUrl = config.baseUrl + \"/api/images\";\n\n  let imageSubmitHandler = e => {\n    // console.log(\"current form:\",e.target.imgFIle)\n    let formData = new FormData(e.target);\n    e.target.imgFile.value = null; // console.log(formData, \"here is the form\")\n\n    e.preventDefault();\n    console.log(\"This is here\", details);\n    postImageData(imageUrl + \"/create\", formData).then(async response => {\n      console.log(\"akashaki ::\", response);\n\n      if (response.success) {\n        setDetails({ ...details,\n          images: [response.response._id]\n        });\n      } else {\n        console.log(response);\n        console.log(\"Cannot create\");\n      }\n    });\n  };\n\n  let postImageData = async (url, formData) => {\n    console.log(formData);\n    let response = await fetch(url, {\n      method: 'POST',\n      // *GET, POST, PUT, DELETE, etc.\n      mode: 'cors',\n      // no-cors, *cors, same-origin\n      cache: 'no-cache',\n      // *default, no-cache, reload, force-cache, only-if-cached\n      // credentials: 'include', // include, *same-origin, omit\n      headers: {\n        //   'Content-Type': 'multipart/form-data',\n        \"Authorization\": JSON.parse(user.accesstoken) //   'Content-Type': 'application/x-www-form-urlencoded',\n\n      },\n      body: formData\n    });\n    let resp = await response.json();\n    return resp;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Please pay in the below UPI link and attach screenshot to register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"upi://pay?pa=\" + event.upiId,\n      children: \"event.upiId\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"user\",\n      ref: form,\n      onSubmit: imageSubmitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"imgFile\",\n          className: \"form-control-user\",\n          id: \"exampleInputEmail\",\n          \"aria-describedby\": \"emailHelp\",\n          onChange: event => handleImageUpload(event),\n          placeholder: \"Enter Service Name...\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onSubmit: imageSubmitHandler,\n        className: \"btn btn-primary btn-user btn-block\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Register, \"iRIEZ0IKTQQ6B6uf7snPKCVflsc=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/akashaki/personalProjects/AdminPanel/src/components/events/Register.js"],"names":["useState","Register","event","setEvent","user","JSON","parse","localStorage","getItem","details","setDetails","handleImageUpload","console","log","files","target","formData","FormData","append","imageUrl","config","baseUrl","imageSubmitHandler","e","imgFile","value","preventDefault","postImageData","then","response","success","images","_id","url","fetch","method","mode","cache","headers","accesstoken","body","resp","json","upiId","form"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\n\nfunction Register ({event, setEvent}) {\n\n    let user = JSON.parse(localStorage.getItem(\"user\"));\n    const [details, setDetails] = useState({});\n\n    const handleImageUpload = event => {\n        console.log(\"inside onChange!\")\n        const files = event.target.files\n        console.log(files[0])\n        const formData = new FormData()\n        formData.append('imgFile', files[0])\n      }\n      let imageUrl = config.baseUrl+\"/api/images\"\n      let imageSubmitHandler = (e) => {\n        // console.log(\"current form:\",e.target.imgFIle)\n        let formData = new FormData(e.target)\n        e.target.imgFile.value = null\n        // console.log(formData, \"here is the form\")\n        e.preventDefault();\n        console.log(\"This is here\",details)\n        postImageData(imageUrl+\"/create\", formData).then(async(response)=> {\n            console.log(\"akashaki ::\", response)\n            if(response.success) {\n                setDetails({...details,images: [response.response._id]});\n            } else {\n                console.log(response)\n                console.log(\"Cannot create\")\n            }\n        })\n        \n       \n    }\n\n    let postImageData = async(url, formData) =>{\n        console.log(formData)\n        let response = await fetch(url, {\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\n            mode: 'cors', // no-cors, *cors, same-origin\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n            // credentials: 'include', // include, *same-origin, omit\n            headers: {\n            //   'Content-Type': 'multipart/form-data',\n              \"Authorization\": JSON.parse(user.accesstoken)\n            //   'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            body: formData\n          })\n        let resp = await response.json()\n        return resp\n    }\n\n\n    return <>\n        <h4>Please pay in the below UPI link and attach screenshot to register</h4>\n        <a href={\"upi://pay?pa=\"+event.upiId}>event.upiId</a>\n        <form className=\"user\" ref={form} onSubmit={imageSubmitHandler}>\n                        <div className=\"form-group\">\n                            <input type=\"file\" name=\"imgFile\" className=\"form-control-user\"\n                                id=\"exampleInputEmail\" aria-describedby=\"emailHelp\" onChange={event => handleImageUpload(event)}\n                                placeholder=\"Enter Service Name...\" required></input>\n                        </div>\n                        <button type=\"submit\" onSubmit={imageSubmitHandler} className=\"btn btn-primary btn-user btn-block\">\n                            Submit\n                        </button>\n        </form>\n    </>\n\n\n}\n\nexport default Register"]},"metadata":{},"sourceType":"module"}