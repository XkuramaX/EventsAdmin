{"ast":null,"code":"var _jsxFileName = \"/Users/akashaki/personalProjects/AdminPanel/src/components/events/ViewMembersTableItem.js\";\nimport config from '../../config.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ViewMembersTableItem({\n  item\n}) {\n  let imageUrl = config.baseUrl + \"/api/images\";\n  console.log(\"item\", item);\n  let user = JSON.parse(localStorage.getItem(\"user\"));\n  let data = {\n    _id: item._id,\n    name: item.member.firstName + \" \" + item.member.lastName,\n    batch: item.member.batch,\n    position: item.member.position,\n    url: item.transaction.image ? item.transaction.image : \"\",\n    approved\n  };\n\n  let openImage = async id => {\n    // href={config.baseUrl+\"/\"+data.url}\n    let response = await fetch(imageUrl + \"/\" + id, {\n      method: 'GET',\n      // *GET, POST, PUT, DELETE, etc.\n      mode: 'cors',\n      // no-cors, *cors, same-origin\n      cache: 'no-cache',\n      // *default, no-cache, reload, force-cache, only-if-cached\n      // credentials: 'include', // include, *same-origin, omit\n      headers: {\n        'Content-Type': 'application/json',\n        \"Authorization\": JSON.parse(user.accesstoken) //   'Content-Type': 'application/x-www-form-urlencoded',\n\n      }\n    });\n    response = await response.json();\n\n    if (response.success) {\n      window.open(config.baseUrl + \"/\" + response.response.url);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: data.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 37\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: data.batch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 37\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: data.position\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 37\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-link\",\n        onClick: () => {\n          openImage(data.url);\n        },\n        children: \"Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 41\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 37\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        children: \"Approve\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 41\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 37\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-danger\",\n        children: \"Remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 41\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 37\n    }, this)]\n  }, data._id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 35\n  }, this);\n}\n\n_c = ViewMembersTableItem;\nexport default ViewMembersTableItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewMembersTableItem\");","map":{"version":3,"sources":["/Users/akashaki/personalProjects/AdminPanel/src/components/events/ViewMembersTableItem.js"],"names":["config","ViewMembersTableItem","item","imageUrl","baseUrl","console","log","user","JSON","parse","localStorage","getItem","data","_id","name","member","firstName","lastName","batch","position","url","transaction","image","approved","openImage","id","response","fetch","method","mode","cache","headers","accesstoken","json","success","window","open"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,mBAAnB;;;AAGA,SAASC,oBAAT,CAA+B;AAACC,EAAAA;AAAD,CAA/B,EAAuC;AACnC,MAAIC,QAAQ,GAAGH,MAAM,CAACI,OAAP,GAAiB,aAAhC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBJ,IAApB;AACA,MAAIK,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAX;AACA,MAAIC,IAAI,GAAG;AACPC,IAAAA,GAAG,EAAEX,IAAI,CAACW,GADH;AAEPC,IAAAA,IAAI,EAAEZ,IAAI,CAACa,MAAL,CAAYC,SAAZ,GAAwB,GAAxB,GAA8Bd,IAAI,CAACa,MAAL,CAAYE,QAFzC;AAGPC,IAAAA,KAAK,EAAEhB,IAAI,CAACa,MAAL,CAAYG,KAHZ;AAIPC,IAAAA,QAAQ,EAAEjB,IAAI,CAACa,MAAL,CAAYI,QAJf;AAKPC,IAAAA,GAAG,EAAElB,IAAI,CAACmB,WAAL,CAAiBC,KAAjB,GAAuBpB,IAAI,CAACmB,WAAL,CAAiBC,KAAxC,GAA8C,EAL5C;AAMPC,IAAAA;AANO,GAAX;;AASA,MAAIC,SAAS,GAAG,MAAOC,EAAP,IAAc;AAC1B;AACA,QAAIC,QAAQ,GAAG,MAAMC,KAAK,CAACxB,QAAQ,GAAC,GAAT,GAAasB,EAAd,EAAkB;AACxCG,MAAAA,MAAM,EAAE,KADgC;AACzB;AACfC,MAAAA,IAAI,EAAE,MAFkC;AAE1B;AACdC,MAAAA,KAAK,EAAE,UAHiC;AAGrB;AACnB;AACAC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,yBAAiBvB,IAAI,CAACC,KAAL,CAAWF,IAAI,CAACyB,WAAhB,CAFV,CAGT;;AAHS;AAL+B,KAAlB,CAA1B;AAWAN,IAAAA,QAAQ,GAAG,MAAMA,QAAQ,CAACO,IAAT,EAAjB;;AACA,QAAIP,QAAQ,CAACQ,OAAb,EAAsB;AAClBC,MAAAA,MAAM,CAACC,IAAP,CAAYpC,MAAM,CAACI,OAAP,GAAe,GAAf,GAAmBsB,QAAQ,CAACA,QAAT,CAAkBN,GAAjD;AACH;AACJ,GAjBD;;AAmBA,sBAA8B;AAAA,4BACE;AAAA,gBAAKR,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAKF,IAAI,CAACM;AAAV;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,gBAAKN,IAAI,CAACO;AAAV;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA,6BAAI;AAAQ,QAAA,SAAS,EAAC,cAAlB;AAAiC,QAAA,OAAO,EAAE,MAAI;AAACK,UAAAA,SAAS,CAACZ,IAAI,CAACQ,GAAN,CAAT;AAAoB,SAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA,6BAAI;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAA,6BAAI;AAAQ,QAAA,SAAS,EAAC,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,YANF;AAAA,KAASR,IAAI,CAACC,GAAd;AAAA;AAAA;AAAA;AAAA,UAA9B;AAQH;;KAxCQZ,oB;AA0CT,eAAeA,oBAAf","sourcesContent":["import config from '../../config.json'\n\n\nfunction ViewMembersTableItem ({item}) {\n    let imageUrl = config.baseUrl + \"/api/images\"\n    console.log(\"item\", item)\n    let user = JSON.parse(localStorage.getItem(\"user\"))\n    let data = {\n        _id: item._id,\n        name: item.member.firstName + \" \" + item.member.lastName,\n        batch: item.member.batch,\n        position: item.member.position,\n        url: item.transaction.image?item.transaction.image:\"\",\n        approved\n    }\n\n    let openImage = async (id) => {\n        // href={config.baseUrl+\"/\"+data.url}\n        let response = await fetch(imageUrl+\"/\"+id, {\n            method: 'GET', // *GET, POST, PUT, DELETE, etc.\n            mode: 'cors', // no-cors, *cors, same-origin\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n            // credentials: 'include', // include, *same-origin, omit\n            headers: {\n              'Content-Type': 'application/json',\n              \"Authorization\": JSON.parse(user.accesstoken)\n            //   'Content-Type': 'application/x-www-form-urlencoded',\n            },\n        })\n        response = await response.json();\n        if (response.success) {\n            window.open(config.baseUrl+\"/\"+response.response.url);\n        }\n    }\n\n    return                        <tr key={data._id}>\n                                    <td>{data.name}</td>\n                                    <td>{data.batch}</td>\n                                    <td>{data.position}</td>\n                                    <td><button className='btn btn-link' onClick={()=>{openImage(data.url)}}>Image</button></td>\n                                    <td><button className='btn btn-primary'>Approve</button></td>\n                                    <td><button className='btn btn-danger'>Remove</button></td>\n                                  </tr>  \n}\n\nexport default ViewMembersTableItem"]},"metadata":{},"sourceType":"module"}