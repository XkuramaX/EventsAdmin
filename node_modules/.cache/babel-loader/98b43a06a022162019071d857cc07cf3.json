{"ast":null,"code":"var _jsxFileName = \"/Users/akashaki/personalProjects/AdminPanel/src/components/events/Events.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport config from '../../config.json';\nimport EventsTableItem from './EventsTableItem';\nimport Create from './Create';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Events() {\n  _s();\n\n  const [events, setEvents] = useState([]);\n  const [options, setOptions] = useState(0);\n  const [details, setDetails] = useState({});\n  const [types, setTypes] = useState([]);\n  const [members, setMembers] = useState([]);\n  let key = JSON.parse(localStorage.getItem(\"apiKey\"));\n  let url = config.baseUrl + \"/api/events\";\n  let typesUrl = config.baseUrl + \"/api/types\"; // let membersUrl = config.baseUrl+\"/api/members\"\n\n  let fetchData = async url => {\n    let response = await fetch(url, {\n      method: 'GET',\n      // *GET, POST, PUT, DELETE, etc.\n      mode: 'cors',\n      // no-cors, *cors, same-origin\n      cache: 'no-cache',\n      // *default, no-cache, reload, force-cache, only-if-cached\n      // credentials: 'include', // include, *same-origin, omit\n      headers: {\n        'Content-Type': 'application/json',\n        \"Authorization\": key //   'Content-Type': 'application/x-www-form-urlencoded',\n\n      }\n    });\n    let resp = await response.json();\n    return resp;\n  };\n\n  let postData = async url => {\n    let response = await fetch(url, {\n      method: 'POST',\n      // *GET, POST, PUT, DELETE, etc.\n      mode: 'cors',\n      // no-cors, *cors, same-origin\n      cache: 'no-cache',\n      // *default, no-cache, reload, force-cache, only-if-cached\n      // credentials: 'include', // include, *same-origin, omit\n      headers: {\n        'Content-Type': 'application/json',\n        \"Authorization\": key //   'Content-Type': 'application/x-www-form-urlencoded',\n\n      },\n      body: JSON.stringify(details)\n    });\n    let resp = await response.json();\n    return resp;\n  };\n\n  let deleteData = async url => {\n    let response = await fetch(url, {\n      method: 'DELETE',\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/json',\n        \"Authorization\": key\n      }\n    });\n  };\n\n  useEffect(() => {\n    fetchData(url + \"/all\").then(async response => {\n      console.log(\"response\", response);\n\n      if (response.success) {\n        console.log(response.response);\n        setEvents(response.response);\n      } else {\n        console.log(\"unable to fetch data!\");\n      }\n    });\n  });\n  useEffect(() => {\n    fetchData(typesUrl + \"/all\").then(async response => {\n      console.log(\"response\", response);\n\n      if (response.success) {\n        console.log(response.response);\n        setTypes(response.response);\n      } else {\n        console.log(\"unable to fetch data!\");\n      }\n    });\n  });\n\n  let submitHandler = e => {\n    e.preventDefault();\n    console.log(\"This is here\", events);\n    postData(url + \"/create\").then(async response => {\n      if (response.success) {\n        setEvents([...events, events]);\n        e.target.name.value = null;\n        e.target.type.value = \"\";\n        e.target.price.value = 0;\n        e.target.description.value = null;\n        setDetails({});\n      } else {\n        console.log(response);\n        console.log(\"Cannot create\");\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"col- btn btn-link\",\n        onClick: () => setOptions(0),\n        children: \"All Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"col-3 btn btn-link\",\n        onClick: () => setOptions(1),\n        children: \"Create Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }, this), options == 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: events.forEach(event => {\n        /*#__PURE__*/\n        _jsxDEV(EventsTableItem, {\n          item: event,\n          remove: deleteData,\n          deleteUrl: url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false) : '', options == 1 ? /*#__PURE__*/_jsxDEV(Create, {\n      submitHandler: submitHandler,\n      setDetails: setDetails,\n      details: details,\n      types: types\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 30\n    }, this) : '']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Events, \"7gLoHtkV/TdeKzINZFmCR8zg+00=\");\n\n_c = Events;\nexport default Events;\n\nvar _c;\n\n$RefreshReg$(_c, \"Events\");","map":{"version":3,"sources":["/Users/akashaki/personalProjects/AdminPanel/src/components/events/Events.js"],"names":["React","useState","useEffect","config","EventsTableItem","Create","Events","events","setEvents","options","setOptions","details","setDetails","types","setTypes","members","setMembers","key","JSON","parse","localStorage","getItem","url","baseUrl","typesUrl","fetchData","response","fetch","method","mode","cache","headers","resp","json","postData","body","stringify","deleteData","then","console","log","success","submitHandler","e","preventDefault","target","name","value","type","price","description","forEach","event"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport config from '../../config.json'\nimport EventsTableItem from './EventsTableItem'\nimport Create from './Create'\n\n\nfunction Events() {\n\n    const [events, setEvents] = useState([])\n    const [options, setOptions] = useState(0)\n    const [details, setDetails] = useState({})\n    const [types, setTypes] = useState([])\n\n    const [members, setMembers] = useState([])\n\n    let key = JSON.parse(localStorage.getItem(\"apiKey\"))\n\n    let url = config.baseUrl+\"/api/events\"\n    let typesUrl = config.baseUrl+\"/api/types\"\n\n    // let membersUrl = config.baseUrl+\"/api/members\"\n\n    let fetchData = async(url) =>{\n        let response = await fetch(url, {\n            method: 'GET', // *GET, POST, PUT, DELETE, etc.\n            mode: 'cors', // no-cors, *cors, same-origin\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n            // credentials: 'include', // include, *same-origin, omit\n            headers: {\n              'Content-Type': 'application/json',\n              \"Authorization\": key\n            //   'Content-Type': 'application/x-www-form-urlencoded',\n            },\n          })\n        let resp = await response.json()\n        return resp\n    }\n\n    let postData = async(url) =>{\n        let response = await fetch(url, {\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\n            mode: 'cors', // no-cors, *cors, same-origin\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n            // credentials: 'include', // include, *same-origin, omit\n            headers: {\n              'Content-Type': 'application/json',\n              \"Authorization\": key\n            //   'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            body: JSON.stringify(details)\n          })\n        let resp = await response.json()\n        return resp\n    }\n\n    let deleteData = async(url) => {\n        let response = await fetch(url, {\n            method: 'DELETE',\n            mode: 'cors',\n            headers: {\n                'Content-Type': 'application/json',\n                \"Authorization\": key\n            }\n        })\n    }\n\n    useEffect(()=>{\n        fetchData(url+\"/all\").then(async(response)=>{\n            console.log(\"response\",response)\n            if (response.success){\n                console.log(response.response)\n                setEvents(response.response)\n            } else {\n                console.log(\"unable to fetch data!\")\n            }\n            \n        })\n    })\n\n    useEffect(()=>{\n        fetchData(typesUrl+\"/all\").then(async(response)=>{\n            console.log(\"response\",response)\n            if (response.success){\n                console.log(response.response)\n                setTypes(response.response)\n            } else {\n                console.log(\"unable to fetch data!\")\n            }\n            \n        })\n    })\n\n    let submitHandler = (e) => {\n        e.preventDefault();\n        console.log(\"This is here\",events)\n        postData(url+\"/create\").then(async(response)=> {\n            if(response.success) {\n                setEvents([...events,events])\n                e.target.name.value = null\n                e.target.type.value = \"\"\n                e.target.price.value = 0\n                e.target.description.value = null\n                setDetails({})\n            } else {\n                console.log(response)\n                console.log(\"Cannot create\")\n            }\n            \n        })\n    }\n\n    return (\n        <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <button className=\"col- btn btn-link\" onClick={()=>setOptions(0)}>All Events</button>\n                    <button className=\"col-3 btn btn-link\" onClick={()=>setOptions(1)}>Create Event</button>\n                </div>\n                {options==0? <>{events.forEach(event => {\n                    <EventsTableItem item={event} remove={deleteData} deleteUrl={url}></EventsTableItem>\n                })}</>:''}\n                {options==1? <Create submitHandler={submitHandler} setDetails={setDetails} details={details} types={types}></Create>:''}\n\n\n                    \n        </div>)\n}\n\nexport default Events\n"]},"metadata":{},"sourceType":"module"}