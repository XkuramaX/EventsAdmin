{"ast":null,"code":"var _jsxFileName = \"/Users/akashaki/personalProjects/AdminPanel/src/components/events/EventPage.js\";\nimport React, { useState, useEffect } from 'react';\nimport config from '../../config.json';\nimport EventOptions from './EventOptions';\nimport EditEvent from './EditEvent';\nimport ViewMembers from './ViewMembers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EventPage({\n  event,\n  deleteEvent,\n  setPageOptions,\n  types,\n  details,\n  setDetails,\n  editHandler,\n  options,\n  setOptions,\n  setSelectedEvent\n}) {\n  const dateArr = Date(event.date).split(\" \");\n  let dateString = \"\";\n  dateArr.forEach((item, i) => i < 4 ? dateString += item + \" \" : dateString += \"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"card-header\",\n      children: event.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"img-thumbnail\",\n        src: event.images.length > 0 ? config.baseUrl + \"/\" + event.images[0].url : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"card-title\",\n        children: dateString\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"card-title\",\n        children: event.type.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"card-title\",\n        children: [\"Total participants: \", \" \" + event.registrations.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-text\",\n        children: event.details\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this), options == 0 ? /*#__PURE__*/_jsxDEV(EventOptions, {\n      event: event,\n      setOptions: setOptions,\n      setPageOptions: setPageOptions,\n      deleteEvent: deleteEvent,\n      setDetails: setDetails\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 20\n    }, this) : '', options == 2 ? /*#__PURE__*/_jsxDEV(ViewMembers, {\n      event: event,\n      details: details,\n      setDetails: setDetails,\n      setEvent: setSelectedEvent,\n      setOptions: setOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 20\n    }, this) : '', options == 3 ? /*#__PURE__*/_jsxDEV(EditEvent, {\n      submitHandler: editHandler,\n      event: event,\n      types: types,\n      details: details,\n      setDetails: setDetails,\n      setOptions: setOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 20\n    }, this) : '']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 12\n  }, this);\n}\n\n_c = EventPage;\nexport default EventPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventPage\");","map":{"version":3,"sources":["/Users/akashaki/personalProjects/AdminPanel/src/components/events/EventPage.js"],"names":["React","useState","useEffect","config","EventOptions","EditEvent","ViewMembers","EventPage","event","deleteEvent","setPageOptions","types","details","setDetails","editHandler","options","setOptions","setSelectedEvent","dateArr","Date","date","split","dateString","forEach","item","i","name","images","length","baseUrl","url","type","registrations"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,SAASC,SAAT,CAAmB;AAACC,EAAAA,KAAD;AAAQC,EAAAA,WAAR;AAAqBC,EAAAA,cAArB;AAAqCC,EAAAA,KAArC;AAA4CC,EAAAA,OAA5C;AAAqDC,EAAAA,UAArD;AAAiEC,EAAAA,WAAjE;AAA8EC,EAAAA,OAA9E;AAAuFC,EAAAA,UAAvF;AAAmGC,EAAAA;AAAnG,CAAnB,EAAyI;AAErI,QAAMC,OAAO,GAAGC,IAAI,CAACX,KAAK,CAACY,IAAP,CAAJ,CAAiBC,KAAjB,CAAuB,GAAvB,CAAhB;AACA,MAAIC,UAAU,GAAG,EAAjB;AACAJ,EAAAA,OAAO,CAACK,OAAR,CAAgB,CAACC,IAAD,EAAOC,CAAP,KAAYA,CAAC,GAAC,CAAF,GAAKH,UAAU,IAAEE,IAAI,GAAC,GAAtB,GAA2BF,UAAU,IAAE,EAAnE;AAGA,sBAAO;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACP;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA,gBAA6Bd,KAAK,CAACkB;AAAnC;AAAA;AAAA;AAAA;AAAA,YADO,eAEP;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,eAAf;AAA+B,QAAA,GAAG,EAAElB,KAAK,CAACmB,MAAN,CAAaC,MAAb,GAAoB,CAApB,GAAuBzB,MAAM,CAAC0B,OAAP,GAAe,GAAf,GAAmBrB,KAAK,CAACmB,MAAN,CAAa,CAAb,EAAgBG,GAA1D,GAA8D;AAAlG;AAAA;AAAA;AAAA;AAAA,cADJ,eAEE;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA,kBAA4BR;AAA5B;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA,kBAA4Bd,KAAK,CAACuB,IAAN,CAAWL;AAAvC;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA,2CAAgD,MAAIlB,KAAK,CAACwB,aAAN,CAAoBJ,MAAxE;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA,kBAA0BpB,KAAK,CAACI;AAAhC;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFO,EASNG,OAAO,IAAI,CAAX,gBAAc,QAAC,YAAD;AAAc,MAAA,KAAK,EAAEP,KAArB;AAA4B,MAAA,UAAU,EAAEQ,UAAxC;AAAoD,MAAA,cAAc,EAAEN,cAApE;AAAoF,MAAA,WAAW,EAAED,WAAjG;AAA8G,MAAA,UAAU,EAAEI;AAA1H;AAAA;AAAA;AAAA;AAAA,YAAd,GAAoK,EAT9J,EAWNE,OAAO,IAAI,CAAX,gBAAc,QAAC,WAAD;AAAa,MAAA,KAAK,EAAEP,KAApB;AAA2B,MAAA,OAAO,EAAEI,OAApC;AAA6C,MAAA,UAAU,EAAEC,UAAzD;AAAqE,MAAA,QAAQ,EAAEI,gBAA/E;AAAiG,MAAA,UAAU,EAAED;AAA7G;AAAA;AAAA;AAAA;AAAA,YAAd,GAAsJ,EAXhJ,EAYND,OAAO,IAAI,CAAX,gBAAc,QAAC,SAAD;AAAW,MAAA,aAAa,EAAED,WAA1B;AAAuC,MAAA,KAAK,EAAEN,KAA9C;AAAqD,MAAA,KAAK,EAAEG,KAA5D;AAAmE,MAAA,OAAO,EAAEC,OAA5E;AAAqF,MAAA,UAAU,EAAEC,UAAjG;AAA6G,MAAA,UAAU,EAAEG;AAAzH;AAAA;AAAA;AAAA;AAAA,YAAd,GAAgK,EAZ1J;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAeH;;KAtBQT,S;AAwBT,eAAeA,SAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport config from '../../config.json'\nimport EventOptions from './EventOptions'\nimport EditEvent from './EditEvent'\nimport ViewMembers from './ViewMembers'\n\nfunction EventPage({event, deleteEvent, setPageOptions, types, details, setDetails, editHandler, options, setOptions, setSelectedEvent}) {\n    \n    const dateArr = Date(event.date).split(\" \")\n    let dateString = \"\"\n    dateArr.forEach((item, i)=> i<4? dateString+=item+\" \": dateString+=\"\")\n\n\n    return <div className=\"card\">\n    <h5 className=\"card-header\">{event.name}</h5>\n    <div className=\"card-body\">\n        <img className=\"img-thumbnail\" src={event.images.length>0? config.baseUrl+\"/\"+event.images[0].url:''}></img>\n      <h5 className=\"card-title\">{dateString}</h5>\n      <h5 className=\"card-title\">{event.type.name}</h5>\n      <h5 className=\"card-title\">Total participants: {\" \"+event.registrations.length}</h5>\n      <p className=\"card-text\">{event.details}</p>\n    </div>\n    {options == 0? <EventOptions event={event} setOptions={setOptions} setPageOptions={setPageOptions} deleteEvent={deleteEvent} setDetails={setDetails}></EventOptions>:''}\n    \n    {options == 2? <ViewMembers event={event} details={details} setDetails={setDetails} setEvent={setSelectedEvent} setOptions={setOptions}></ViewMembers>:''}\n    {options == 3? <EditEvent submitHandler={editHandler} event={event} types={types} details={details} setDetails={setDetails} setOptions={setOptions}></EditEvent>:''}\n  </div>\n  \n}\n\nexport default EventPage"]},"metadata":{},"sourceType":"module"}