{"ast":null,"code":"var _jsxFileName = \"/Users/akashaki/personalProjects/AdminPanel/src/components/members/Profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport config from '../../config.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Profile() {\n  _s();\n\n  let user = JSON.parse(localStorage.getItem(\"user\"));\n  console.log(\"user: \", user.accesstoken);\n  const [member, setMember] = useState({});\n  let MembersUrl = config.baseUrl + \"/api/members\";\n  console.log(\"akash\");\n  let imageUrl = config.baseUrl + \"/api/images\";\n  let form = useRef(null);\n  const [details, setDetails] = useState({\n    url: \"\"\n  });\n  const [editForm, setEditForm] = useState();\n\n  let fetchData = async url => {\n    let response = await fetch(url, {\n      method: 'GET',\n      // *GET, POST, PUT, DELETE, etc.\n      mode: 'cors',\n      // no-cors, *cors, same-origin\n      cache: 'no-cache',\n      // *default, no-cache, reload, force-cache, only-if-cached\n      // credentials: 'include', // include, *same-origin, omit\n      headers: {\n        'Content-Type': 'application/json',\n        \"Authorization\": JSON.parse(user.accesstoken) //   'Content-Type': 'application/x-www-form-urlencoded',\n\n      }\n    });\n    let resp = await response.json();\n    return resp;\n  };\n\n  let editData = async (url, editForm) => {\n    let response = await fetch(url, {\n      method: 'PUT',\n      // *GET, POST, PUT, DELETE, etc.\n      mode: 'cors',\n      // no-cors, *cors, same-origin\n      cache: 'no-cache',\n      // *default, no-cache, reload, force-cache, only-if-cached\n      // credentials: 'include', // include, *same-origin, omit\n      headers: {\n        'Content-Type': 'application/json',\n        \"Authorization\": JSON.parse(user.accesstoken) //   'Content-Type': 'application/x-www-form-urlencoded',\n\n      },\n      body: JSON.stringify(editForm)\n    });\n    let resp = await response.json();\n    return resp;\n  };\n\n  let postImageData = async (url, formData) => {\n    console.log(formData);\n    let response = await fetch(url, {\n      method: 'POST',\n      // *GET, POST, PUT, DELETE, etc.\n      mode: 'cors',\n      // no-cors, *cors, same-origin\n      cache: 'no-cache',\n      // *default, no-cache, reload, force-cache, only-if-cached\n      // credentials: 'include', // include, *same-origin, omit\n      headers: {\n        //   'Content-Type': 'multipart/form-data',\n        \"Authorization\": JSON.parse(user.accesstoken) //   'Content-Type': 'application/x-www-form-urlencoded',\n\n      },\n      body: formData\n    });\n    let resp = await response.json();\n    return resp;\n  };\n\n  useEffect(() => {\n    fetchData(MembersUrl + \"/\" + user.id).then(response => {\n      console.log(response);\n\n      if (response.success) {\n        let resp = response.response;\n        console.log(\"success\", response);\n        setMember(response.response);\n      } else {\n        console.log(response);\n      }\n    });\n  }, []);\n\n  let imageSubmitHandler = e => {\n    // console.log(\"current form:\",e.target.imgFIle)\n    let formData = new FormData(e.target);\n    e.target.imgFile.value = null; // console.log(formData, \"here is the form\")\n\n    e.preventDefault();\n    console.log(\"This is here\", details);\n    postImageData(imageUrl + \"/create\", formData).then(async response => {\n      if (response.success) {\n        setDetails(response.response);\n        console.log(response);\n        editData(MembersUrl + \"/\" + user.id, {});\n      } else {\n        console.log(response);\n        console.log(\"Cannot create\");\n      }\n    });\n  };\n\n  const handleImageUpload = event => {\n    console.log(\"inside onChange!\");\n    const files = event.target.files;\n    console.log(files[0]);\n    const formData = new FormData();\n    formData.append('imgFile', files[0]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"h3 mb-2 text-gray-800 heading\",\n      children: member.firstName + \" \" + member.lastName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card shadow mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: member.image ? config.baseUrl + \"/\" + member.image.url : '',\n        className: \"img-fluid\",\n        alt: \"...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"user\",\n        ref: form,\n        onSubmit: imageSubmitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            name: \"imgFile\",\n            className: \"form-control-user\",\n            id: \"exampleInputEmail\",\n            \"aria-describedby\": \"emailHelp\",\n            onChange: event => handleImageUpload(event),\n            placeholder: \"Enter Service Name...\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onSubmit: imageSubmitHandler,\n          className: \"btn btn-primary btn-user btn-block\",\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header py-3\",\n        children: /*#__PURE__*/_jsxDEV(\"h6\", {\n          className: \"m-0 font-weight-bold text-primary\",\n          children: [\"Username: \", member.userName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header py-3\",\n        children: /*#__PURE__*/_jsxDEV(\"h6\", {\n          className: \"m-0 font-weight-bold text-primary\",\n          children: [\"Phone number: \", member.phoneNumber]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header py-3\",\n        children: /*#__PURE__*/_jsxDEV(\"h6\", {\n          className: \"m-0 font-weight-bold text-primary\",\n          children: [\"Batch: \", member.batch]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 12\n  }, this);\n}\n\n_s(Profile, \"xY/lgIaITGx5413Ppts3W/y3MFQ=\");\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/Users/akashaki/personalProjects/AdminPanel/src/components/members/Profile.js"],"names":["React","useState","useEffect","useRef","config","Profile","user","JSON","parse","localStorage","getItem","console","log","accesstoken","member","setMember","MembersUrl","baseUrl","imageUrl","form","details","setDetails","url","editForm","setEditForm","fetchData","response","fetch","method","mode","cache","headers","resp","json","editData","body","stringify","postImageData","formData","id","then","success","imageSubmitHandler","e","FormData","target","imgFile","value","preventDefault","handleImageUpload","event","files","append","firstName","lastName","image","userName","phoneNumber","batch"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef} from 'react';\nimport config from '../../config.json'\n\nfunction Profile() {\n    let user = JSON.parse(localStorage.getItem(\"user\"))\n    console.log(\"user: \", user.accesstoken)\n    const [member, setMember] = useState({})\n    let MembersUrl = config.baseUrl+\"/api/members\";\n    console.log(\"akash\")\n    let imageUrl = config.baseUrl+\"/api/images\";\n    let form = useRef(null);\n    const [details, setDetails] = useState({\n        url: \"\",\n    })\n    const [editForm, setEditForm] = useState()\n\n    let fetchData = async(url) =>{\n        let response = await fetch(url, {\n            method: 'GET', // *GET, POST, PUT, DELETE, etc.\n            mode: 'cors', // no-cors, *cors, same-origin\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n            // credentials: 'include', // include, *same-origin, omit\n            headers: {\n              'Content-Type': 'application/json',\n              \"Authorization\": JSON.parse(user.accesstoken)\n            //   'Content-Type': 'application/x-www-form-urlencoded',\n            },\n          })\n        let resp = await response.json()\n        return resp\n    }\n\n    let editData = async(url, editForm) =>{\n        let response = await fetch(url, {\n            method: 'PUT', // *GET, POST, PUT, DELETE, etc.\n            mode: 'cors', // no-cors, *cors, same-origin\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n            // credentials: 'include', // include, *same-origin, omit\n            headers: {\n              'Content-Type': 'application/json',\n              \"Authorization\": JSON.parse(user.accesstoken)\n            //   'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            body: JSON.stringify(editForm)\n          })\n        let resp = await response.json()\n        return resp\n    }\n\n    let postImageData = async(url, formData) =>{\n        console.log(formData)\n        let response = await fetch(url, {\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\n            mode: 'cors', // no-cors, *cors, same-origin\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n            // credentials: 'include', // include, *same-origin, omit\n            headers: {\n            //   'Content-Type': 'multipart/form-data',\n              \"Authorization\": JSON.parse(user.accesstoken)\n            //   'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            body: formData\n          })\n        let resp = await response.json()\n        return resp\n    }\n\n    useEffect(()=>{\n            fetchData(MembersUrl+\"/\"+user.id).then((response)=>{\n                console.log(response);\n                if (response.success) {\n\n                    let resp = response.response;\n\n                    console.log(\"success\",response)\n                    setMember(response.response)\n\n            } else {\n                console.log(response)\n            } \n        })\n    }, [])\n\n    let imageSubmitHandler = (e) => {\n        // console.log(\"current form:\",e.target.imgFIle)\n        let formData = new FormData(e.target)\n        e.target.imgFile.value = null\n        // console.log(formData, \"here is the form\")\n        e.preventDefault();\n        console.log(\"This is here\",details)\n        postImageData(imageUrl+\"/create\", formData).then(async(response)=> {\n            if(response.success) {\n                setDetails(response.response);\n                console.log(response);\n                editData(MembersUrl+\"/\"+user.id, {})\n            } else {\n                console.log(response)\n                console.log(\"Cannot create\")\n            }\n            \n        })\n        \n       \n    }\n\n    const handleImageUpload = event => {\n        console.log(\"inside onChange!\")\n        const files = event.target.files\n        console.log(files[0])\n        const formData = new FormData()\n        formData.append('imgFile', files[0])\n      }\n\n    return <div className=\"container-fluid\">\n\n    <h1 className=\"h3 mb-2 text-gray-800 heading\">{member.firstName+\" \"+member.lastName}</h1>\n\n    <div className=\"card shadow mb-4\">\n        <img src={member.image? config.baseUrl+\"/\"+member.image.url: ''} className=\"img-fluid\" alt=\"...\"></img>\n        <form className=\"user\" ref={form} onSubmit={imageSubmitHandler}>\n                        <div className=\"form-group\">\n                            <input type=\"file\" name=\"imgFile\" className=\"form-control-user\"\n                                id=\"exampleInputEmail\" aria-describedby=\"emailHelp\" onChange={event => handleImageUpload(event)}\n                                placeholder=\"Enter Service Name...\" required></input>\n                        </div>\n                        <button type=\"submit\" onSubmit={imageSubmitHandler} className=\"btn btn-primary btn-user btn-block\">\n                            Upload\n                        </button>\n        </form>\n        <div className=\"card-header py-3\">\n            <h6 className=\"m-0 font-weight-bold text-primary\">Username: {member.userName}</h6>\n        </div>\n        <div className=\"card-header py-3\">\n            <h6 className=\"m-0 font-weight-bold text-primary\">Phone number: {member.phoneNumber}</h6>\n        </div>\n        <div className=\"card-header py-3\">\n            <h6 className=\"m-0 font-weight-bold text-primary\">Batch: {member.batch}</h6>\n        </div>\n    </div>\n\n</div>\n}\nexport default Profile"]},"metadata":{},"sourceType":"module"}