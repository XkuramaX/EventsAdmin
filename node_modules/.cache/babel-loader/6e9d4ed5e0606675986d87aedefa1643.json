{"ast":null,"code":"var _jsxFileName = \"/Users/akashaki/personalProjects/AdminPanel/src/components/events/Events.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport config from '../../config.json';\nimport LeadTableItem from './EventsTable';\nimport CsvDownload from 'react-json-to-csv';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Events(user) {\n  _s();\n\n  // console.log(user)\n  let BaseUrl = config.baseUrl + \"/api/events\";\n  let LeadUrl = config.baseUrl + \"/api/events/all\";\n  const [events, setEvents] = useState([]);\n  const [Page, setPage] = useState({\n    count: 0,\n    current: 0,\n    totalPage: 0\n  });\n  let key = JSON.parse(localStorage.getItem(\"apiKey\"));\n\n  let fetchData = async url => {\n    let response = await fetch(url, {\n      method: 'GET',\n      // *GET, POST, PUT, DELETE, etc.\n      mode: 'cors',\n      // no-cors, *cors, same-origin\n      cache: 'no-cache',\n      // *default, no-cache, reload, force-cache, only-if-cached\n      // credentials: 'include', // include, *same-origin, omit\n      headers: {\n        'Content-Type': 'application/json',\n        \"Authorization\": key //   'Content-Type': 'application/x-www-form-urlencoded',\n\n      }\n    });\n    let resp = await response.json();\n    return resp;\n  };\n\n  let deleteItem = async url => {\n    let response = await fetch(url, {\n      method: 'DELETE',\n      // *GET, POST, PUT, DELETE, etc.\n      mode: 'cors',\n      // no-cors, *cors, same-origin\n      cache: 'no-cache',\n      // *default, no-cache, reload, force-cache, only-if-cached\n      // credentials: 'include', // include, *same-origin, omit\n      headers: {\n        'Content-Type': 'application/json',\n        \"Authorization\": key //   'Content-Type': 'application/x-www-form-urlencoded',\n\n      }\n    });\n    let resp = await response.json();\n    return resp;\n  };\n\n  const [csvData, setCsvData] = useState([]);\n\n  async function makeCSV(response) {\n    let arr = [];\n    response.map(item => {\n      let obj = {};\n      obj.Name = item.first_name;\n      obj.Phone = item.phone_number;\n      arr.push(obj);\n    });\n    setCsvData(arr);\n  }\n\n  useEffect(() => {\n    fetchData(LeadUrl + '?page=' + Page.current).then(response => {\n      console.log(response);\n\n      if (response.success) {\n        let resp = response.response;\n        makeCSV(resp);\n        console.log(\"success\", response);\n        setLeads(response.response);\n        let currentPage = Page.current;\n        let totalPage = parseInt(response.count / 50);\n\n        if (response.count % 50) {\n          totalPage += 1;\n        } //checking pagination of the last item deletion in the last page\n        // if (response.count % 10 === 0 && pendingPage.current ===  parseInt(response.count/10)) {\n        //     currentPage -= 1\n        // }\n\n\n        setPage({\n          count: response.count,\n          current: currentPage,\n          totalPage: totalPage\n        });\n      } else {\n        console.log(response);\n      }\n    });\n  }, []);\n  useEffect(() => {\n    fetchData(LeadUrl + '?page=' + Page.current).then(response => {\n      if (response.success) {\n        console.log(\"success\", response);\n        makeCSV(response.response);\n        setLeads(response.response);\n      } else {\n        console.log(response);\n      }\n    });\n  }, [Page]);\n\n  async function removeItem(item) {\n    let response = await deleteItem(BaseUrl + \"/\" + item._id);\n\n    if (response.success) {\n      setLeads(leads.filter(lead => lead._id !== item._id));\n      console.log(\"remove\");\n      let currentPage = Page.current; //checking pagination of the last item deletion in the last page\n\n      if ((Page.count - 1) % 50 === 0 && Page.current === parseInt((Page.count - 1) / 50)) {\n        currentPage -= 1;\n      }\n\n      if (Page.count % 50 && Page.totalPage != parseInt((Page.count - 1) / 50)) {\n        Page.totalPage -= 1;\n      }\n\n      setPage({\n        count: Page.count - 1,\n        current: currentPage\n      });\n    } else {\n      console.log(\"Cannot delete\");\n    }\n  }\n\n  async function previousPage() {\n    if (Page.current != 0) {\n      setPage({ ...Page,\n        current: Page.current - 1\n      });\n    }\n\n    console.log(Page);\n  }\n\n  async function nextPage() {\n    if (Page.current < Page.totalPage) {\n      setPage({ ...Page,\n        current: Page.current + 1\n      });\n    }\n\n    console.log(Page);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"h3 mb-2 text-gray-800 heading\",\n      children: \"Leads Table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 21\n    }, this), \" \", /*#__PURE__*/_jsxDEV(CsvDownload, {\n      data: csvData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 84\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card shadow mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header py-3\",\n        children: /*#__PURE__*/_jsxDEV(\"h6\", {\n          className: \"m-0 font-weight-bold text-primary\",\n          children: \"Leads\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        width: \"100%\",\n        children: leads.map(item => /*#__PURE__*/_jsxDEV(LeadTableItem, {\n          item: item,\n          remove: removeItem\n        }, item._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 41\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        \"aria-label\": \"...\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"pagination\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"page-item\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"page-link\",\n              onClick: () => {\n                previousPage();\n              },\n              children: \"Prev\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"page-item\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"page-link\",\n              onClick: () => {\n                nextPage();\n              },\n              children: \"Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Events, \"45OqiC/i3I1DumV9Zk0LiCGDQE8=\");\n\n_c = Events;\nexport default Leads;\n\nvar _c;\n\n$RefreshReg$(_c, \"Events\");","map":{"version":3,"sources":["/Users/akashaki/personalProjects/AdminPanel/src/components/events/Events.js"],"names":["React","useState","useEffect","config","LeadTableItem","CsvDownload","Events","user","BaseUrl","baseUrl","LeadUrl","events","setEvents","Page","setPage","count","current","totalPage","key","JSON","parse","localStorage","getItem","fetchData","url","response","fetch","method","mode","cache","headers","resp","json","deleteItem","csvData","setCsvData","makeCSV","arr","map","item","obj","Name","first_name","Phone","phone_number","push","then","console","log","success","setLeads","currentPage","parseInt","removeItem","_id","leads","filter","lead","previousPage","nextPage","Leads"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport config from '../../config.json'\nimport LeadTableItem from './EventsTable'\nimport CsvDownload from 'react-json-to-csv'\n\nfunction Events(user) {\n        // console.log(user)\n        let BaseUrl = config.baseUrl + \"/api/events\"\n        let LeadUrl = config.baseUrl + \"/api/events/all\"\n\n        const [events, setEvents] = useState([])\n        \n        const [Page, setPage] = useState({\n            count: 0,\n            current: 0,\n            totalPage: 0\n        })\n        \n        let key = JSON.parse(localStorage.getItem(\"apiKey\"))\n\n        let fetchData = async(url) =>{\n            let response = await fetch(url, {\n                method: 'GET', // *GET, POST, PUT, DELETE, etc.\n                mode: 'cors', // no-cors, *cors, same-origin\n                cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n                // credentials: 'include', // include, *same-origin, omit\n                headers: {\n                  'Content-Type': 'application/json',\n                  \"Authorization\": key\n                //   'Content-Type': 'application/x-www-form-urlencoded',\n                },\n              })\n            let resp = await response.json()\n            return resp\n        }\n\n        let deleteItem = async (url) => {\n            let response = await fetch(url, {\n                method: 'DELETE', // *GET, POST, PUT, DELETE, etc.\n                mode: 'cors', // no-cors, *cors, same-origin\n                cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n                // credentials: 'include', // include, *same-origin, omit\n                headers: {\n                  'Content-Type': 'application/json',\n                  \"Authorization\": key\n                //   'Content-Type': 'application/x-www-form-urlencoded',\n                },\n              })\n            let resp = await response.json()\n            return resp\n        }\n\n        const [csvData, setCsvData] = useState([]);\n\n        async function makeCSV(response) {\n            let arr = [];\n            response.map((item)=> {\n                let obj = {};\n                obj.Name = item.first_name;\n                obj.Phone = item.phone_number;\n                arr.push(obj);\n            })\n            setCsvData(arr);\n        }\n\n        useEffect(()=>{\n            fetchData(LeadUrl+'?page='+Page.current).then((response)=>{\n                console.log(response);\n                if (response.success) {\n\n                    let resp = response.response;\n                    \n                    makeCSV(resp);\n\n                    console.log(\"success\",response)\n                    setLeads(response.response)    \n                    let currentPage = Page.current\n                    let totalPage = parseInt(response.count/50)\n                    if (response.count%50) {\n                        totalPage += 1\n                    }\n                    //checking pagination of the last item deletion in the last page\n                    // if (response.count % 10 === 0 && pendingPage.current ===  parseInt(response.count/10)) {\n                    //     currentPage -= 1\n                    // }\n\n                    setPage({\n                        count: response.count,\n                        current: currentPage,\n                        totalPage: totalPage\n                    })\n\n\n            } else {\n                console.log(response)\n            }    \n        })},[])\n\n        useEffect(()=>{\n            fetchData(LeadUrl+'?page='+Page.current).then((response)=>{\n                \n                if (response.success) {\n                console.log(\"success\",response)\n                makeCSV(response.response);\n                setLeads(response.response)    \n            } else {\n                console.log(response)\n            }    \n        })},[Page])\n\n        \n        async function removeItem(item){\n            let response = await deleteItem(BaseUrl+\"/\"+item._id)\n            if(response.success){\n                setLeads(leads.filter((lead)=>lead._id !== item._id))\n                console.log(\"remove\")\n                let currentPage = Page.current\n                //checking pagination of the last item deletion in the last page\n                if ((Page.count-1) % 50 === 0 && Page.current ===  parseInt((Page.count-1)/50)) {\n                    currentPage -= 1\n                }\n\n                if (Page.count % 50 && Page.totalPage != parseInt((Page.count-1)/50)){\n                    Page.totalPage -= 1\n                }\n\n\n                setPage({\n                    count: Page.count - 1 ,\n                    current: currentPage\n                })\n            } else {\n                console.log(\"Cannot delete\")\n            }\n            \n        }\n\n        \n\n        \n\n        async function previousPage() {\n            if (Page.current != 0){\n                setPage({...Page, current: Page.current - 1});\n            }\n            console.log(Page)\n        }\n\n        async function nextPage() {\n            if (Page.current < Page.totalPage){\n                setPage({...Page, current: Page.current + 1});\n            }\n            console.log(Page)\n        }\n\n        \n\n        \n\n\n    return (\n        <div className=\"container-fluid\">\n\n                    <h1 className=\"h3 mb-2 text-gray-800 heading\">Leads Table</h1> <CsvDownload data={csvData} />\n\n                    <div className=\"card shadow mb-4\">\n                        <div className=\"card-header py-3\">\n                            <h6 className=\"m-0 font-weight-bold text-primary\">Leads</h6>\n                        </div>\n                                {/* <table className=\"table table-bordered\" id=\"dataTable\" width=\"100%\" cellspacing=\"0\">\n                                    <thead>\n                                        <tr>\n                                            <th>Name</th>\n                                            <th>Email</th>\n                                            <th>Address</th>\n                                            <th>Phone</th>\n                                            <th>Requirements</th>\n                                            <th>Description</th>\n                                            <th>Accept/Delete</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {pendingleads.map((item)=>(\n                                            <LeadTableItem key={item._id} item={item} accept={acceptPending} remove={removeItemFromPending}></LeadTableItem>\n                                        ))}\n                                        \n                                    </tbody>\n                                    \n                                </table> */}\n                                <div className=\"container\" width=\"100%\">\n                                    \n                                    {leads.map((item)=>(\n                                        <LeadTableItem key={item._id} item={item} remove={removeItem}></LeadTableItem>\n                                    ))}\n                                </div>\n                                <nav aria-label=\"...\">\n                                    <ul className=\"pagination\">\n                                    \n                                            <li className=\"page-item\">\n                                                <button className=\"page-link\" onClick={()=>{previousPage()}}>Prev</button>\n                                            </li>\n                                            <li className=\"page-item\">\n                                                <button className=\"page-link\" onClick={()=>{nextPage()}}>Next</button>\n                                            </li>\n                                        \n                                    </ul>\n                                </nav>\n                    </div>\n\n    </div>\n                \n                \n    )\n}\n\nexport default Leads\n"]},"metadata":{},"sourceType":"module"}