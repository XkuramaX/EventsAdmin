{"ast":null,"code":"var _jsxFileName = \"/Users/akashaki/personalProjects/AdminPanel/src/components/types/Types.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport TypesTableItem from './TypesTableItem';\nimport config from '../../config.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Types() {\n  _s();\n\n  const [types, settypes] = useState([]);\n  const [details, setDetails] = useState({\n    name: \"\"\n  });\n  let key = JSON.parse(localStorage.getItem(\"apiKey\"));\n  let url = config.baseUrl + \"/api/types\";\n\n  let fetchData = async url => {\n    let response = await fetch(url, {\n      method: 'GET',\n      // *GET, POST, PUT, DELETE, etc.\n      mode: 'cors',\n      // no-cors, *cors, same-origin\n      cache: 'no-cache',\n      // *default, no-cache, reload, force-cache, only-if-cached\n      // credentials: 'include', // include, *same-origin, omit\n      headers: {\n        'Content-Type': 'application/json',\n        \"Authorization\": key //   'Content-Type': 'application/x-www-form-urlencoded',\n\n      }\n    });\n    let resp = await response.json();\n    return resp;\n  };\n\n  let postData = async url => {\n    let response = await fetch(url, {\n      method: 'POST',\n      // *GET, POST, PUT, DELETE, etc.\n      mode: 'cors',\n      // no-cors, *cors, same-origin\n      cache: 'no-cache',\n      // *default, no-cache, reload, force-cache, only-if-cached\n      // credentials: 'include', // include, *same-origin, omit\n      headers: {\n        'Content-Type': 'application/json',\n        \"Authorization\": key //   'Content-Type': 'application/x-www-form-urlencoded',\n\n      },\n      body: JSON.stringify(details)\n    });\n    let resp = await response.json();\n    return resp;\n  };\n\n  let deleteData = async url => {\n    let response = await fetch(url, {\n      method: 'DELETE',\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/json',\n        \"Authorization\": key\n      }\n    });\n  };\n\n  useEffect(() => {\n    fetchData(url + \"/all\").then(async response => {\n      console.log(\"response\", response);\n\n      if (response.success) {\n        console.log(response.response);\n        settypes(response.response);\n      } else {\n        console.log(\"unable to fetch data!\");\n      }\n    });\n  }, [details]);\n\n  async function deleteItem(item) {\n    deleteData(url + \"/\" + item._id).then(() => {\n      settypes(types.filter(category => category._id !== item._id));\n      console.log(\"Delete is being called!\", item._id);\n    });\n  }\n\n  let submitHandler = e => {\n    e.preventDefault();\n    console.log(\"This is here\", details);\n    postData(url + \"/create\").then(async response => {\n      if (response.success) {\n        settypes([...types, details]);\n        e.target.name.value = null;\n      } else {\n        console.log(response);\n        console.log(\"Cannot create\");\n      }\n    });\n    set;\n    console.log(details);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"h3 mb-2 text-gray-800 heading\",\n      children: \"Add a Type\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"user\",\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          className: \"form-control form-control-user\",\n          id: \"exampleInputEmail\",\n          \"aria-describedby\": \"emailHelp\",\n          onChange: e => {\n            setDetails({ ...details,\n              name: e.target.value\n            });\n          },\n          value: details.name,\n          placeholder: \"Enter Service Name...\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onSubmit: submitHandler,\n        className: \"btn btn-primary btn-user btn-block\",\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"h3 mb-2 text-gray-800 heading\",\n      children: \"Types\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card shadow mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header py-3\",\n        children: /*#__PURE__*/_jsxDEV(\"h6\", {\n          className: \"m-0 font-weight-bold text-primary\",\n          children: \"All Types\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-responsive\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table table-bordered\",\n            id: \"dataTable\",\n            width: \"100%\",\n            cellspacing: \"0\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: types.map(item => /*#__PURE__*/_jsxDEV(TypesTableItem, {\n                item: item,\n                remove: deleteItem\n              }, item._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Types, \"f1tMBzUBUPzACfaK/OmJHH3jjWg=\");\n\n_c = Types;\nexport default Types;\n\nvar _c;\n\n$RefreshReg$(_c, \"Types\");","map":{"version":3,"sources":["/Users/akashaki/personalProjects/AdminPanel/src/components/types/Types.js"],"names":["React","useState","useEffect","TypesTableItem","config","Types","types","settypes","details","setDetails","name","key","JSON","parse","localStorage","getItem","url","baseUrl","fetchData","response","fetch","method","mode","cache","headers","resp","json","postData","body","stringify","deleteData","then","console","log","success","deleteItem","item","_id","filter","category","submitHandler","e","preventDefault","target","value","set","map"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport TypesTableItem from './TypesTableItem'\nimport config from '../../config.json'\n\nfunction Types() {\n    const [types, settypes] = useState([])\n    const [details, setDetails] = useState({\n        name: \"\"\n    })\n\n    let key = JSON.parse(localStorage.getItem(\"apiKey\"))\n\n    let url = config.baseUrl+\"/api/types\"\n\n    let fetchData = async(url) =>{\n        let response = await fetch(url, {\n            method: 'GET', // *GET, POST, PUT, DELETE, etc.\n            mode: 'cors', // no-cors, *cors, same-origin\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n            // credentials: 'include', // include, *same-origin, omit\n            headers: {\n              'Content-Type': 'application/json',\n              \"Authorization\": key\n            //   'Content-Type': 'application/x-www-form-urlencoded',\n            },\n          })\n        let resp = await response.json()\n        return resp\n    }\n\n    let postData = async(url) =>{\n        let response = await fetch(url, {\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\n            mode: 'cors', // no-cors, *cors, same-origin\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n            // credentials: 'include', // include, *same-origin, omit\n            headers: {\n              'Content-Type': 'application/json',\n              \"Authorization\": key\n            //   'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            body: JSON.stringify(details)\n          })\n        let resp = await response.json()\n        return resp\n    }\n\n    let deleteData = async(url) => {\n        let response = await fetch(url, {\n            method: 'DELETE',\n            mode: 'cors',\n            headers: {\n                'Content-Type': 'application/json',\n                \"Authorization\": key\n            }\n        })\n    }\n\n    useEffect(()=>{\n        fetchData(url+\"/all\").then(async(response)=>{\n            console.log(\"response\",response)\n            if (response.success){\n                console.log(response.response)\n                settypes(response.response)\n            } else {\n                console.log(\"unable to fetch data!\")\n            }\n            \n        })\n    },[details])\n\n    \n\n    async function deleteItem(item) {\n        deleteData(url+\"/\"+item._id).then( ()=>{\n            settypes(types.filter((category)=> category._id !== item._id))\n            console.log(\"Delete is being called!\", item._id\n            )})\n    }\n\n    let submitHandler = (e) => {\n        e.preventDefault();\n        console.log(\"This is here\",details)\n        postData(url+\"/create\").then(async(response)=> {\n            if(response.success) {\n                settypes([...types,details])\n                e.target.name.value = null\n            } else {\n                console.log(response)\n                console.log(\"Cannot create\")\n            }\n            \n        })\n        set\n        console.log(details)\n    }\n\n    return (\n        <div className=\"container-fluid\">\n                    <h1 className=\"h3 mb-2 text-gray-800 heading\">Add a Type</h1>\n\n                    <form className=\"user\" onSubmit={submitHandler}>\n                        <div className=\"form-group\">\n                            <input type=\"text\" name=\"name\" className=\"form-control form-control-user\"\n                                id=\"exampleInputEmail\" aria-describedby=\"emailHelp\" onChange={e => {setDetails({...details, name: e.target.value})}}\n                                value={details.name}\n                                placeholder=\"Enter Service Name...\" required></input>\n                        </div>\n                        <button type=\"submit\" onSubmit={submitHandler} className=\"btn btn-primary btn-user btn-block\">\n                            Create\n                        </button>\n                    </form>\n\n                    <h1 className=\"h3 mb-2 text-gray-800 heading\">Types</h1>\n\n                    <div className=\"card shadow mb-4\">\n                        <div className=\"card-header py-3\">\n                            <h6 className=\"m-0 font-weight-bold text-primary\">All Types</h6>\n                        </div>\n                        <div className=\"card-body\">\n                            <div className=\"table-responsive\">\n                                <table className=\"table table-bordered\" id=\"dataTable\" width=\"100%\" cellspacing=\"0\">\n                                    <thead>\n                                        <tr>\n                                            <th>Name</th>\n                                            <th>Delete</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {types.map((item)=>(\n                                            <TypesTableItem key={item._id} item={item} remove={deleteItem}></TypesTableItem>\n                                        ))}\n                                        \n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n        </div>)\n}\n\nexport default Types\n"]},"metadata":{},"sourceType":"module"}