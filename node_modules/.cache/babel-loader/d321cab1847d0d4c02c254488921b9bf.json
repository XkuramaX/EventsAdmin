{"ast":null,"code":"var _jsxFileName = \"/Users/akashaki/personalProjects/AdminPanel/src/components/images/Images.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport config from '../../config.json';\nimport ImagesTableItem from './imagesTableItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Images() {\n  _s();\n\n  const [images, setimages] = useState([]);\n  const [details, setDetails] = useState({\n    url: \"\"\n  });\n  const [imgPage, setImgPage] = useState({\n    count: 0,\n    current: 0,\n    totalPage: 0\n  });\n  let form = useRef(null);\n  let key = JSON.parse(localStorage.getItem(\"apiKey\"));\n  let url = config.baseUrl + \"/api/image\";\n  let formData = new FormData();\n\n  let fetchData = async url => {\n    let response = await fetch(url, {\n      method: 'GET',\n      // *GET, POST, PUT, DELETE, etc.\n      mode: 'cors',\n      // no-cors, *cors, same-origin\n      cache: 'no-cache',\n      // *default, no-cache, reload, force-cache, only-if-cached\n      // credentials: 'include', // include, *same-origin, omit\n      headers: {\n        'Content-Type': 'application/json',\n        \"Authorization\": key //   'Content-Type': 'application/x-www-form-urlencoded',\n\n      }\n    });\n    let resp = await response.json();\n    return resp;\n  };\n\n  let postData = async (url, formData) => {\n    console.log(formData);\n    let response = await fetch(url, {\n      method: 'POST',\n      // *GET, POST, PUT, DELETE, etc.\n      mode: 'cors',\n      // no-cors, *cors, same-origin\n      cache: 'no-cache',\n      // *default, no-cache, reload, force-cache, only-if-cached\n      // credentials: 'include', // include, *same-origin, omit\n      headers: {\n        //   'Content-Type': 'multipart/form-data',\n        \"Authorization\": key //   'Content-Type': 'application/x-www-form-urlencoded',\n\n      },\n      body: formData\n    });\n    let resp = await response.json();\n    return resp;\n  };\n\n  let deleteData = async url => {\n    let response = await fetch(url, {\n      method: 'DELETE',\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/json',\n        \"Authorization\": key\n      }\n    });\n  };\n\n  useEffect(() => {\n    fetchData(url + \"/all\" + \"?page=\" + imgPage.current).then(async response => {\n      console.log(\"response\", response);\n\n      if (response.success) {\n        console.log(response.response);\n        setimages(response.response);\n        let currentPage = imgPage.current;\n        let totalPage = parseInt(response.count / 9);\n\n        if (response.count % 9) {\n          totalPage += 1;\n        } //checking pagination of the last item deletion in the last page\n        // if (response.count % 10 === 0 && pendingPage.current ===  parseInt(response.count/10)) {\n        //     currentPage -= 1\n        // }\n\n\n        setImgPage({\n          count: response.count,\n          current: currentPage,\n          totalPage: totalPage\n        });\n      } else {\n        console.log(\"unable to fetch data!\");\n      }\n    });\n  }, [details]);\n\n  async function previousImgPage() {\n    if (imgPage.current != 0) {\n      setImgPage({ ...imgPage,\n        current: imgPage.current - 1\n      });\n    }\n\n    console.log(imgPage);\n  }\n\n  async function nextImgPage() {\n    if (imgPage.current < imgPage.totalPage) {\n      setImgPage({ ...imgPage,\n        current: imgPage.current + 1\n      });\n    }\n\n    console.log(imgPage);\n  }\n\n  async function deleteItem(item) {\n    deleteData(url + \"/\" + item._id).then(() => {\n      setimages(images.filter(category => category._id !== item._id));\n      console.log(\"Delete is being called!\", item._id);\n    });\n  }\n\n  let submitHandler = e => {\n    // console.log(\"current form:\",e.target.imgFIle)\n    let formData = new FormData(e.target);\n    e.target.imgFile.value = null; // console.log(formData, \"here is the form\")\n\n    e.preventDefault();\n    console.log(\"This is here\", details);\n    postData(url + \"/create\", formData).then(async response => {\n      if (response.success) {\n        setimages([response.response]);\n      } else {\n        console.log(response);\n        console.log(\"Cannot create\");\n      }\n    });\n    console.log(details);\n  };\n\n  const handleImageUpload = event => {\n    console.log(\"inside onChange!\");\n    const files = event.target.files;\n    console.log(files[0]);\n    const formData = new FormData();\n    formData.append('imgFile', files[0]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"h3 mb-2 text-gray-800 heading\",\n      children: \"Upload the menu card in .pdf format\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"user\",\n      ref: form,\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"imgFile\",\n          className: \"form-control-user\",\n          id: \"exampleInputEmail\",\n          \"aria-describedby\": \"emailHelp\",\n          onChange: event => handleImageUpload(event),\n          placeholder: \"Enter Service Name...\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onSubmit: submitHandler,\n        className: \"btn btn-primary btn-user btn-block\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"h3 mb-2 text-gray-800 heading\",\n      children: \"Menu\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card shadow mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header py-3\",\n        children: /*#__PURE__*/_jsxDEV(\"h6\", {\n          className: \"m-0 font-weight-bold text-primary\",\n          children: \"Current\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          cellspacing: \"0\",\n          children: images.map(item => /*#__PURE__*/_jsxDEV(ImagesTableItem, {\n            item: item,\n            remove: deleteItem\n          }, item._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 45\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Images, \"es2stPjOF6vgg/w7TuOt7ws4FZA=\");\n\n_c = Images;\nexport default Images;\n\nvar _c;\n\n$RefreshReg$(_c, \"Images\");","map":{"version":3,"sources":["/Users/akashaki/personalProjects/AdminPanel/src/components/images/Images.js"],"names":["React","useEffect","useState","useRef","config","ImagesTableItem","Images","images","setimages","details","setDetails","url","imgPage","setImgPage","count","current","totalPage","form","key","JSON","parse","localStorage","getItem","baseUrl","formData","FormData","fetchData","response","fetch","method","mode","cache","headers","resp","json","postData","console","log","body","deleteData","then","success","currentPage","parseInt","previousImgPage","nextImgPage","deleteItem","item","_id","filter","category","submitHandler","e","target","imgFile","value","preventDefault","handleImageUpload","event","files","append","map"],"mappings":"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","sourcesContent":["import React, {useEffect, useState, useRef} from 'react'\nimport config from '../../config.json'\nimport ImagesTableItem from './imagesTableItem'\n\nfunction Images() {\n    const [images, setimages] = useState([])\n    const [details, setDetails] = useState({\n        url: \"\",\n    })\n    const [imgPage, setImgPage] = useState({\n        count: 0,\n        current: 0,\n        totalPage: 0\n    })\n    let form = useRef(null)\n    let key = JSON.parse(localStorage.getItem(\"apiKey\"))\n\n    let url = config.baseUrl+\"/api/image\"\n\n    let formData = new FormData()\n\n    let fetchData = async(url) =>{\n        let response = await fetch(url, {\n            method: 'GET', // *GET, POST, PUT, DELETE, etc.\n            mode: 'cors', // no-cors, *cors, same-origin\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n            // credentials: 'include', // include, *same-origin, omit\n            headers: {\n              'Content-Type': 'application/json',\n              \"Authorization\": key\n            //   'Content-Type': 'application/x-www-form-urlencoded',\n            },\n          })\n        let resp = await response.json()\n        return resp\n    }\n    \n    let postData = async(url, formData) =>{\n        console.log(formData)\n        let response = await fetch(url, {\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\n            mode: 'cors', // no-cors, *cors, same-origin\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n            // credentials: 'include', // include, *same-origin, omit\n            headers: {\n            //   'Content-Type': 'multipart/form-data',\n              \"Authorization\": key\n            //   'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            body: formData\n          })\n        let resp = await response.json()\n        return resp\n    }\n\n    let deleteData = async(url) => {\n        let response = await fetch(url, {\n            method: 'DELETE',\n            mode: 'cors',\n            headers: {\n                'Content-Type': 'application/json',\n                \"Authorization\": key\n            }\n        })\n    }\n\n    useEffect(()=>{\n        fetchData(url+\"/all\"+\"?page=\"+imgPage.current).then(async(response)=>{\n            console.log(\"response\",response)\n            if (response.success){\n                console.log(response.response)\n                setimages(response.response)\n                let currentPage = imgPage.current\n                let totalPage = parseInt(response.count/9)\n                if (response.count%9) {\n                    totalPage += 1\n                }\n                //checking pagination of the last item deletion in the last page\n                // if (response.count % 10 === 0 && pendingPage.current ===  parseInt(response.count/10)) {\n                //     currentPage -= 1\n                // }\n\n                setImgPage({\n                    count: response.count,\n                    current: currentPage,\n                    totalPage: totalPage\n                })\n            } else {\n                console.log(\"unable to fetch data!\")\n            }\n            \n        })\n    },[details])\n\n    async function previousImgPage() {\n        if (imgPage.current != 0){\n            setImgPage({...imgPage, current: imgPage.current - 1});\n        }\n        console.log(imgPage)\n    }\n\n    async function nextImgPage() {\n        if (imgPage.current < imgPage.totalPage){\n            setImgPage({...imgPage, current: imgPage.current + 1});\n        }\n        console.log(imgPage)\n    }\n\n    async function deleteItem(item) {\n        deleteData(url+\"/\"+item._id).then( ()=>{\n            setimages(images.filter((category)=> category._id !== item._id))\n            console.log(\"Delete is being called!\", item._id\n            )})\n    }\n\n    let submitHandler = (e) => {\n        // console.log(\"current form:\",e.target.imgFIle)\n        let formData = new FormData(e.target)\n        e.target.imgFile.value = null\n        // console.log(formData, \"here is the form\")\n        e.preventDefault();\n        console.log(\"This is here\",details)\n        postData(url+\"/create\", formData).then(async(response)=> {\n            if(response.success) {\n                setimages([response.response])\n            } else {\n                console.log(response)\n                console.log(\"Cannot create\")\n            }\n            \n        })\n        \n        console.log(details)\n    }\n\n    const handleImageUpload = event => {\n        console.log(\"inside onChange!\")\n        const files = event.target.files\n        console.log(files[0])\n        const formData = new FormData()\n        formData.append('imgFile', files[0])\n      }\n\n    return (\n        <div className=\"container-fluid\">\n                    <h1 className=\"h3 mb-2 text-gray-800 heading\">Upload the menu card in .pdf format</h1>\n\n                    <form className=\"user\" ref={form} onSubmit={submitHandler}>\n                        <div className=\"form-group\">\n                            <input type=\"file\" name=\"imgFile\" className=\"form-control-user\"\n                                id=\"exampleInputEmail\" aria-describedby=\"emailHelp\" onChange={event => handleImageUpload(event)}\n                                placeholder=\"Enter Service Name...\" required></input>\n                        </div>\n                        <button type=\"submit\" onSubmit={submitHandler} className=\"btn btn-primary btn-user btn-block\">\n                            Upload\n                        </button>\n                    </form>\n\n                    <h1 className=\"h3 mb-2 text-gray-800 heading\">Menu</h1>\n\n                    <div className=\"card shadow mb-4\">\n                        <div className=\"card-header py-3\">\n                            <h6 className=\"m-0 font-weight-bold text-primary\">Current</h6>\n                        </div>\n                        <div className=\"card-body\">\n                                <table cellspacing=\"0\">\n                                    {/* <thead>\n                                        <tr>\n                                            <th>Name</th>\n                                            <th>Delete</th>\n                                        </tr>\n                                    </thead>\n                                     */}\n                                        {images.map((item)=>(\n                                            <ImagesTableItem key={item._id} item={item} remove={deleteItem}></ImagesTableItem>\n                                        ))}\n                                        \n                                    \n                                </table>\n                            \n                        </div>\n                        {/* <nav aria-label=\"...\">\n                            <ul className=\"pagination\">\n                            \n                                    <li className=\"page-item\">\n                                        <button className=\"page-link\" onClick={()=>{previousImgPage()}}>Prev</button>\n                                    </li>\n                                    <li className=\"page-item\">\n                                        <button className=\"page-link\" onClick={()=>{nextImgPage()}}>Next</button>\n                                    </li>\n                                \n                            </ul>\n                        </nav> */}\n                    </div>\n        </div>)\n}\n\nexport default Images\n"]},"metadata":{},"sourceType":"module"}