{"version":3,"sources":["components/nav/Nav.js","components/home/Home.js","components/leads/LeadTableItem.js","components/leads/Leads.js","components/images/imagesTableItem.js","components/images/Images.js","components/images2/imagesTableItem.js","components/images2/Images2.js","components/LoginPage/LoginPage.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","Logout","className","id","to","onClick","Home","LeadTableItem","item","remove","accept","console","log","first_name","phone_number","address","Leads","user","BaseUrl","config","baseUrl","LeadUrl","useState","leads","setLeads","count","current","totalPage","Page","setPage","key","JSON","parse","localStorage","getItem","fetchData","url","a","fetch","method","mode","cache","headers","response","json","resp","deleteItem","csvData","setCsvData","makeCSV","arr","map","obj","Name","Phone","push","removeItem","_id","success","filter","lead","currentPage","parseInt","useEffect","then","data","width","previousPage","nextPage","ImagesTableItem","window","location","href","Images","images","setimages","details","imgPage","setImgPage","form","useRef","FormData","postData","formData","body","deleteData","category","submitHandler","e","target","imgFile","value","preventDefault","ref","onSubmit","type","name","onChange","event","files","append","handleImageUpload","placeholder","required","cellspacing","Images2","images2","setimages2","details2","imgPage2","setImgPage2","LoginPage","login","logout","username","password","setDetails","App","accesstoken","setUser","Login","stringify","setItem","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4RA8EeA,MA1Ef,YAAwB,IAAVC,EAAS,EAATA,OACV,OACI,qBAAIC,UAAU,gEAAgEC,GAAG,mBAAjF,UACI,eAAC,IAAD,CAAMD,UAAU,iEAAiEE,GAAG,IAApF,UACI,qBAAKF,UAAU,iCAAf,SACI,mBAAGA,UAAU,wBAEjB,qBAAKA,UAAU,0BAAf,+BAEJ,oBAAIA,UAAU,yBAEd,oBAAIA,UAAU,kBAAd,SACI,eAAC,IAAD,CAAMA,UAAU,WAAWE,GAAG,IAA9B,UACI,mBAAGF,UAAU,gCACb,kDAIR,oBAAIA,UAAU,oBAEd,oBAAIA,UAAU,WAAd,SACI,eAAC,IAAD,CAAMA,UAAU,WAAWE,GAAG,SAA9B,UACI,mBAAGF,UAAU,qBACb,8CA0BR,oBAAIA,UAAU,WAAd,SACI,eAAC,IAAD,CAAMA,UAAU,WAAWE,GAAG,UAA9B,UACI,mBAAGF,UAAU,qBACb,6CAIR,oBAAIA,UAAU,WAAd,SACI,eAAC,IAAD,CAAMA,UAAU,WAAWE,GAAG,WAA9B,UACI,mBAAGF,UAAU,qBACb,8CAIR,oBAAIA,UAAU,WAAd,SACI,eAAC,IAAD,CAAMA,UAAU,WAAWG,QAASJ,EAAQG,GAAG,IAA/C,UACI,mBAAGF,UAAU,qBACb,mD,kBCNLI,MA9Df,WACI,OACI,sBAAKJ,UAAU,kBAAf,UACI,8CACA,qBAAKA,UAAU,MAAf,SAGY,qBAAKA,UAAU,gBAAf,SAyCI,wO,cCFbK,MA7Cf,YAAgD,IAAxBC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,OAElC,OADAC,QAAQC,IAAIJ,GAeR,aAbA,CAaA,OAAKN,UAAU,OAAf,SACI,sBAAKA,UAAU,gBAAf,UACI,qBAAKA,UAAU,QAAf,SACI,8BAAG,0CAAH,MAA4BM,EAAKK,gBAKrC,qBAAKX,UAAU,QAAf,SACI,8BAAG,2CAAH,MAA6BM,EAAKM,kBAGtC,qBAAKZ,UAAU,QAAf,SACI,8BAAG,6CAAH,MAA+BM,EAAKO,aAMxC,sBAAKb,UAAU,QAAf,UACKQ,EAAO,wBAAQR,UAAU,kBAAkBG,QAAS,WAAKK,EAAOF,IAAzD,oBAAiF,GACzF,wBAAQN,UAAU,iBAAiBG,QAAS,WAAKI,EAAOD,IAAxD,6B,iBCuMLQ,MA1Of,SAAeC,GAEP,IAAIC,EAAUC,EAAOC,QAAU,YAC3BC,EAAUF,EAAOC,QAAU,gBA0B/B,EAA0BE,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEA,EAAwBF,mBAAS,CAC7BG,MAAO,EACPC,QAAS,EACTC,UAAW,IAHf,mBAAOC,EAAP,KAAaC,EAAb,KAMIC,EAAMC,KAAKC,MAAMC,aAAaC,QAAQ,WAEtCC,EAAS,uCAAG,WAAMC,GAAN,iBAAAC,EAAA,sEACSC,MAAMF,EAAK,CAC5BG,OAAQ,MACRC,KAAM,OACNC,MAAO,WAEPC,QAAS,CACP,eAAgB,mBAChB,cAAiBZ,KARX,cACRa,EADQ,gBAYKA,EAASC,OAZd,cAYRC,EAZQ,yBAaLA,GAbK,2CAAH,sDAgBTC,EAAU,uCAAG,WAAOV,GAAP,iBAAAC,EAAA,sEACQC,MAAMF,EAAK,CAC5BG,OAAQ,SACRC,KAAM,OACNC,MAAO,WAEPC,QAAS,CACP,eAAgB,mBAChB,cAAiBZ,KARV,cACTa,EADS,gBAYIA,EAASC,OAZb,cAYTC,EAZS,yBAaNA,GAbM,2CAAH,sDAgBd,EAA8BvB,mBAAS,IAAvC,mBAAOyB,EAAP,KAAgBC,EAAhB,KAvEa,SAyEEC,EAzEF,8EAyEb,WAAuBN,GAAvB,eAAAN,EAAA,sDACQa,EAAM,GACVP,EAASQ,KAAI,SAAC3C,GACV,IAAI4C,EAAM,GACVA,EAAIC,KAAO7C,EAAKK,WAChBuC,EAAIE,MAAQ9C,EAAKM,aACjBoC,EAAIK,KAAKH,MAEbJ,EAAWE,GARf,4CAzEa,+BAkIEM,EAlIF,8EAkIb,WAA0BhD,GAA1B,eAAA6B,EAAA,sEACyBS,EAAW5B,EAAQ,IAAIV,EAAKiD,KADrD,cAEgBC,SACRlC,EAASD,EAAMoC,QAAO,SAACC,GAAD,OAAQA,EAAKH,MAAQjD,EAAKiD,QAChD9C,QAAQC,IAAI,UACRiD,EAAcjC,EAAKF,SAElBE,EAAKH,MAAM,GAAK,KAAO,GAAKG,EAAKF,UAAaoC,UAAUlC,EAAKH,MAAM,GAAG,MACvEoC,GAAe,GAGfjC,EAAKH,MAAQ,IAAMG,EAAKD,WAAamC,UAAUlC,EAAKH,MAAM,GAAG,MAC7DG,EAAKD,WAAa,GAItBE,EAAQ,CACJJ,MAAOG,EAAKH,MAAQ,EACpBC,QAASmC,KAGblD,QAAQC,IAAI,iBArBpB,4CAlIa,kEAgKb,sBAAAyB,EAAA,sDACwB,GAAhBT,EAAKF,SACLG,EAAQ,2BAAID,GAAL,IAAWF,QAASE,EAAKF,QAAU,KAE9Cf,QAAQC,IAAIgB,GAJhB,4CAhKa,kEAuKb,sBAAAS,EAAA,sDACQT,EAAKF,QAAUE,EAAKD,WACpBE,EAAQ,2BAAID,GAAL,IAAWF,QAASE,EAAKF,QAAU,KAE9Cf,QAAQC,IAAIgB,GAJhB,4CAvKa,sBAmLjB,OA/FImC,qBAAU,WACN5B,EAAUd,EAAQ,SAASO,EAAKF,SAASsC,MAAK,SAACrB,GAE3C,GADAhC,QAAQC,IAAI+B,GACRA,EAASe,QAAS,CAIlBT,EAFWN,EAASA,UAIpBhC,QAAQC,IAAI,UAAU+B,GACtBnB,EAASmB,EAASA,UAClB,IAAIkB,EAAcjC,EAAKF,QACnBC,EAAYmC,SAASnB,EAASlB,MAAM,IACpCkB,EAASlB,MAAM,KACfE,GAAa,GAOjBE,EAAQ,CACJJ,MAAOkB,EAASlB,MAChBC,QAASmC,EACTlC,UAAWA,SAKnBhB,QAAQC,IAAI+B,QAEhB,IAEJoB,qBAAU,WACN5B,EAAUd,EAAQ,SAASO,EAAKF,SAASsC,MAAK,SAACrB,GAEvCA,EAASe,SACb/C,QAAQC,IAAI,UAAU+B,GACtBM,EAAQN,EAASA,UACjBnB,EAASmB,EAASA,WAElBhC,QAAQC,IAAI+B,QAEhB,CAACf,IAqDL,sBAAK1B,UAAU,kBAAf,UAEY,oBAAIA,UAAU,gCAAd,yBAFZ,IAE2E,cAAC,IAAD,CAAa+D,KAAMlB,IAElF,sBAAK7C,UAAU,mBAAf,UACI,qBAAKA,UAAU,mBAAf,SACI,oBAAIA,UAAU,oCAAd,qBAsBI,qBAAKA,UAAU,YAAYgE,MAAM,OAAjC,SAEK3C,EAAM4B,KAAI,SAAC3C,GAAD,OACP,cAAC,EAAD,CAA8BA,KAAMA,EAAMC,OAAQ+C,GAA9BhD,EAAKiD,UAGjC,qBAAK,aAAW,MAAhB,SACI,qBAAIvD,UAAU,aAAd,UAEQ,oBAAIA,UAAU,YAAd,SACI,wBAAQA,UAAU,YAAYG,QAAS,YA1NlE,mCA0NuE8D,IAA5C,oBAEJ,oBAAIjE,UAAU,YAAd,SACI,wBAAQA,UAAU,YAAYG,QAAS,YA7NlE,mCA6NuE+D,IAA5C,gC,MChNjCC,MAhBf,YAA0C,IAAhB7D,EAAe,EAAfA,KAAMC,EAAS,EAATA,OAO5B,OANAE,QAAQC,IAAI,OAAQJ,GAOhB,qBAAIN,UAAU,MAAd,UACI,oBAAIA,UAAU,QAAd,SAAsB,mBAAGG,QANf,WACdiE,OAAOC,SAASC,KAAOrD,EAAOC,QAAU,IAAMZ,EAAK4B,KAKzB,gDACtB,oBAAIlC,UAAU,QAAd,SAAsB,wBAAQA,UAAU,iBAAiBG,QAAS,WAAKI,EAAOD,IAAxD,0BC+MnBiE,MAvNf,WACI,MAA4BnD,mBAAS,IAArC,mBAAOoD,EAAP,KAAeC,EAAf,KACA,EAA8BrD,mBAAS,CACnCc,IAAK,KADT,mBAAOwC,EAAP,KAGA,GAHA,KAG8BtD,mBAAS,CACnCG,MAAO,EACPC,QAAS,EACTC,UAAW,KAHf,mBAAOkD,EAAP,KAAgBC,EAAhB,KAKIC,EAAOC,iBAAO,MACdlD,EAAMC,KAAKC,MAAMC,aAAaC,QAAQ,WAEtCE,EAAMjB,EAAOC,QAAQ,aAIrBe,GAFW,IAAI8C,SAEN,uCAAG,WAAM7C,GAAN,iBAAAC,EAAA,sEACSC,MAAMF,EAAK,CAC5BG,OAAQ,MACRC,KAAM,OACNC,MAAO,WAEPC,QAAS,CACP,eAAgB,mBAChB,cAAiBZ,KARX,cACRa,EADQ,gBAYKA,EAASC,OAZd,cAYRC,EAZQ,yBAaLA,GAbK,2CAAH,uDAgBTqC,EAAQ,uCAAG,WAAM9C,EAAK+C,GAAX,iBAAA9C,EAAA,6DACX1B,QAAQC,IAAIuE,GADD,SAEU7C,MAAMF,EAAK,CAC5BG,OAAQ,OACRC,KAAM,OACNC,MAAO,WAEPC,QAAS,CAEP,cAAiBZ,GAGnBsD,KAAMD,IAZC,cAEPxC,EAFO,gBAcMA,EAASC,OAdf,cAcPC,EAdO,yBAeJA,GAfI,2CAAH,wDAkBRwC,EAAU,uCAAG,WAAMjD,GAAN,SAAAC,EAAA,sEACQC,MAAMF,EAAK,CAC5BG,OAAQ,SACRC,KAAM,OACNE,QAAS,CACL,eAAgB,mBAChB,cAAiBZ,KANZ,yDAAH,sDAnDA,SAkHCgB,EAlHD,8EAkHd,WAA0BtC,GAA1B,SAAA6B,EAAA,sDACIgD,EAAWjD,EAAI,IAAI5B,EAAKiD,KAAKO,MAAM,WAC/BW,EAAUD,EAAOf,QAAO,SAAC2B,GAAD,OAAaA,EAAS7B,MAAQjD,EAAKiD,QAC3D9C,QAAQC,IAAI,0BAA2BJ,EAAKiD,QAHpD,4CAlHc,sBA8DdM,qBAAU,WACN5B,EAAUC,eAAoByC,EAAQnD,SAASsC,KAA/C,uCAAoD,WAAMrB,GAAN,iBAAAN,EAAA,sDAChD1B,QAAQC,IAAI,WAAW+B,GACnBA,EAASe,SACT/C,QAAQC,IAAI+B,EAASA,UACrBgC,EAAUhC,EAASA,UACfkB,EAAcgB,EAAQnD,QACtBC,EAAYmC,SAASnB,EAASlB,MAAM,GACpCkB,EAASlB,MAAM,IACfE,GAAa,GAOjBmD,EAAW,CACPrD,MAAOkB,EAASlB,MAChBC,QAASmC,EACTlC,UAAWA,KAGfhB,QAAQC,IAAI,yBArBgC,2CAApD,yDAyBF,CAACgE,IAgBHb,qBAAU,WACN5B,EAAUC,EAAI,aAAayC,EAAQnD,SAASsC,MAAK,SAACrB,GAC9CA,EAASe,SACT/C,QAAQC,IAAI,UAAW+B,GACvBgC,EAAUhC,EAASA,WAEnBhC,QAAQC,IAAI+B,QAEhB,CAACkC,IASL,IAAIU,EAAgB,SAACC,GAEjB,IAAIL,EAAW,IAAIF,SAASO,EAAEC,QAC9BD,EAAEC,OAAOC,QAAQC,MAAQ,KAEzBH,EAAEI,iBACFjF,QAAQC,IAAI,eAAegE,GAC3BM,EAAS9C,EAAI,UAAW+C,GAAUnB,KAAlC,uCAAuC,WAAMrB,GAAN,SAAAN,EAAA,sDAChCM,EAASe,QACRiB,EAAU,CAAChC,EAASA,YAEpBhC,QAAQC,IAAI+B,GACZhC,QAAQC,IAAI,kBALmB,2CAAvC,uDAUAD,QAAQC,IAAIgE,IAuBhB,OACI,sBAAK1E,UAAU,kBAAf,UACY,oBAAIA,UAAU,gCAAd,iDAEA,uBAAMA,UAAU,OAAO2F,IAAKd,EAAMe,SAAUP,EAA5C,UACI,qBAAKrF,UAAU,aAAf,SACI,uBAAO6F,KAAK,OAAOC,KAAK,UAAU9F,UAAU,oBACxCC,GAAG,oBAAoB,mBAAiB,YAAY8F,SAAU,SAAAC,GAAK,OA3BrE,SAAAA,GACtBvF,QAAQC,IAAI,oBACZ,IAAMuF,EAAQD,EAAMT,OAAOU,MAC3BxF,QAAQC,IAAIuF,EAAM,KACD,IAAIlB,UACZmB,OAAO,UAAWD,EAAM,IAsB8DE,CAAkBH,IACzFI,YAAY,wBAAwBC,UAAQ,MAEpD,wBAAQR,KAAK,SAASD,SAAUP,EAAerF,UAAU,qCAAzD,uBAKJ,oBAAIA,UAAU,gCAAd,kBAEA,sBAAKA,UAAU,mBAAf,UACI,qBAAKA,UAAU,mBAAf,SACI,oBAAIA,UAAU,oCAAd,uBAEJ,qBAAKA,UAAU,YAAf,SACQ,uBAAOsG,YAAY,IAAnB,SAQS9B,EAAOvB,KAAI,SAAC3C,GAAD,OACR,cAAC,EAAD,CAAgCA,KAAMA,EAAMC,OAAQqC,GAA9BtC,EAAKiD,mBClLxDY,MAhBf,YAA0C,IAAhB7D,EAAe,EAAfA,KAAMC,EAAS,EAATA,OAO5B,OANAE,QAAQC,IAAI,OAAQJ,GAOhB,qBAAIN,UAAU,MAAd,UACI,oBAAIA,UAAU,QAAd,SAAsB,mBAAGG,QANf,WACdiE,OAAOC,SAASC,KAAOrD,EAAOC,QAAU,IAAMZ,EAAK4B,KAKzB,gDACtB,oBAAIlC,UAAU,QAAd,SAAsB,wBAAQA,UAAU,iBAAiBG,QAAS,WAAKI,EAAOD,IAAxD,0BC+MnBiG,MAvNf,WACI,MAA8BnF,mBAAS,IAAvC,mBAAOoF,EAAP,KAAgBC,EAAhB,KACA,EAAgCrF,mBAAS,CACrCc,IAAK,KADT,mBAAOwE,EAAP,KAGA,GAHA,KAGgCtF,mBAAS,CACrCG,MAAO,EACPC,QAAS,EACTC,UAAW,KAHf,mBAAOkF,EAAP,KAAiBC,EAAjB,KAKI/B,EAAOC,iBAAO,MACdlD,EAAMC,KAAKC,MAAMC,aAAaC,QAAQ,WAEtCE,EAAMjB,EAAOC,QAAQ,cAIrBe,GAFW,IAAI8C,SAEN,uCAAG,WAAM7C,GAAN,iBAAAC,EAAA,sEACSC,MAAMF,EAAK,CAC5BG,OAAQ,MACRC,KAAM,OACNC,MAAO,WAEPC,QAAS,CACP,eAAgB,mBAChB,cAAiBZ,KARX,cACRa,EADQ,gBAYKA,EAASC,OAZd,cAYRC,EAZQ,yBAaLA,GAbK,2CAAH,uDAgBTqC,EAAQ,uCAAG,WAAM9C,EAAK+C,GAAX,iBAAA9C,EAAA,6DACX1B,QAAQC,IAAIuE,GADD,SAEU7C,MAAMF,EAAK,CAC5BG,OAAQ,OACRC,KAAM,OACNC,MAAO,WAEPC,QAAS,CAEP,cAAiBZ,GAGnBsD,KAAMD,IAZC,cAEPxC,EAFO,gBAcMA,EAASC,OAdf,cAcPC,EAdO,yBAeJA,GAfI,2CAAH,wDAkBRwC,EAAU,uCAAG,WAAMjD,GAAN,SAAAC,EAAA,sEACQC,MAAMF,EAAK,CAC5BG,OAAQ,SACRC,KAAM,OACNE,QAAS,CACL,eAAgB,mBAChB,cAAiBZ,KANZ,yDAAH,sDAnDC,SAkHAgB,EAlHA,8EAkHf,WAA0BtC,GAA1B,SAAA6B,EAAA,sDACIgD,EAAWjD,EAAI,IAAI5B,EAAKiD,KAAKO,MAAM,WAC/B2C,EAAWD,EAAQ/C,QAAO,SAAC2B,GAAD,OAAaA,EAAS7B,MAAQjD,EAAKiD,QAC7D9C,QAAQC,IAAI,0BAA2BJ,EAAKiD,QAHpD,4CAlHe,sBA8DfM,qBAAU,WACN5B,EAAUC,eAAoByE,EAASnF,SAASsC,KAAhD,uCAAqD,WAAMrB,GAAN,iBAAAN,EAAA,sDACjD1B,QAAQC,IAAI,WAAW+B,GACnBA,EAASe,SACT/C,QAAQC,IAAI+B,EAASA,UACrBgE,EAAWhE,EAASA,UAChBkB,EAAcgD,EAASnF,QACvBC,EAAYmC,SAASnB,EAASlB,MAAM,GACpCkB,EAASlB,MAAM,IACfE,GAAa,GAOjBmF,EAAY,CACRrF,MAAOkB,EAASlB,MAChBC,QAASmC,EACTlC,UAAWA,KAGfhB,QAAQC,IAAI,yBArBiC,2CAArD,yDAyBF,CAACgG,IAgBH7C,qBAAU,WACN5B,EAAUC,EAAI,aAAayE,EAASnF,SAASsC,MAAK,SAACrB,GAC/CA,EAASe,SACT/C,QAAQC,IAAI,UAAW+B,GACvBgE,EAAWhE,EAASA,WAEpBhC,QAAQC,IAAI+B,QAEhB,CAACkE,IASL,IAAItB,EAAgB,SAACC,GAEjB,IAAIL,EAAW,IAAIF,SAASO,EAAEC,QAC9BD,EAAEC,OAAOC,QAAQC,MAAQ,KAEzBH,EAAEI,iBACFjF,QAAQC,IAAI,eAAegG,GAC3B1B,EAAS9C,EAAI,UAAW+C,GAAUnB,KAAlC,uCAAuC,WAAMrB,GAAN,SAAAN,EAAA,sDAChCM,EAASe,QACRiD,EAAW,CAAChE,EAASA,YAErBhC,QAAQC,IAAI+B,GACZhC,QAAQC,IAAI,kBALmB,2CAAvC,uDAUAD,QAAQC,IAAIgG,IAuBhB,OACI,sBAAK1G,UAAU,kBAAf,UACY,oBAAIA,UAAU,gCAAd,iDAEA,uBAAMA,UAAU,OAAO2F,IAAKd,EAAMe,SAAUP,EAA5C,UACI,qBAAKrF,UAAU,aAAf,SACI,uBAAO6F,KAAK,OAAOC,KAAK,UAAU9F,UAAU,oBACxCC,GAAG,oBAAoB,mBAAiB,YAAY8F,SAAU,SAAAC,GAAK,OA3BrE,SAAAA,GACtBvF,QAAQC,IAAI,oBACZ,IAAMuF,EAAQD,EAAMT,OAAOU,MAC3BxF,QAAQC,IAAIuF,EAAM,KACD,IAAIlB,UACZmB,OAAO,UAAWD,EAAM,IAsB8DE,CAAkBH,IACzFI,YAAY,wBAAwBC,UAAQ,MAEpD,wBAAQR,KAAK,SAASD,SAAUP,EAAerF,UAAU,qCAAzD,uBAKJ,oBAAIA,UAAU,gCAAd,kBAEA,sBAAKA,UAAU,mBAAf,UACI,qBAAKA,UAAU,mBAAf,SACI,oBAAIA,UAAU,oCAAd,uBAEJ,qBAAKA,UAAU,YAAf,SACQ,uBAAOsG,YAAY,IAAnB,SAQSE,EAAQvD,KAAI,SAAC3C,GAAD,OACT,cAAC,EAAD,CAAgCA,KAAMA,EAAMC,OAAQqC,GAA9BtC,EAAKiD,mBC7IxDsD,MArDf,YAAqC,IAAjBC,EAAgB,EAAhBA,MAChB,GADgC,EAATC,OACK3F,mBAAS,CAAE4F,SAAU,GAAIC,SAAU,MAA/D,mBAAKvC,EAAL,KAAcwC,EAAd,KAEI7B,EAAgB,SAACC,GACjBA,EAAEI,iBACFoB,EAAMpC,IAGV,OACI,qBAAK1E,UAAU,YAAf,SAEA,qBAAKA,UAAU,6BAAf,SAEI,qBAAKA,UAAU,+BAAf,SACI,qBAAKA,UAAU,wCAAf,SACI,qBAAKA,UAAU,gBAAf,SACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,8CACf,qBAAKA,UAAU,WAAf,SACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,cAAf,SACI,oBAAIA,UAAU,wBAAd,6BAEJ,uBAAMA,UAAU,OAAO4F,SAAUP,EAAjC,UACI,qBAAKrF,UAAU,aAAf,SACI,uBAAO6F,KAAK,OAAOC,KAAK,WAAW9F,UAAU,iCACzCC,GAAG,oBAAoB,mBAAiB,YAAY8F,SAAU,SAAAT,GAAM4B,EAAW,2BAAIxC,GAAL,IAAcsC,SAAU1B,EAAEC,OAAOE,UAC/GA,MAAOf,EAAQsC,SACfZ,YAAY,oBAAoBC,UAAQ,MAEhD,qBAAKrG,UAAU,aAAf,SACI,uBAAO6F,KAAK,WAAWC,KAAK,WAAW9F,UAAU,iCAAiC+F,SAAU,SAAAT,GAAM4B,EAAW,2BAAIxC,GAAL,IAAcuC,SAAU3B,EAAEC,OAAOE,UACzIA,MAAOf,EAAQuC,SACfhH,GAAG,uBAAuBmG,YAAY,eAE9C,wBAAQP,KAAK,SAASD,SAAUP,EAAerF,UAAU,qCAAzD,yC,OCyDzBmH,MA9Ef,WAEE,MAAwB/F,mBAAS,CAC/BgG,YAAarF,aAAaC,QAAQ,YADpC,mBAAOjB,EAAP,KAAasG,EAAb,KAIIC,EAAK,uCAAG,WAAO5C,GAAP,mBAAAvC,EAAA,6DAEND,EAAMjB,EAAOC,QAAQ,mBAFf,SAGakB,MAAMF,EAAK,CAChCG,OAAQ,OACRC,KAAM,OACNC,MAAO,WAEPC,QAAS,CACP,eAAgB,oBAGlB0C,KAAMrD,KAAK0F,UAAU7C,KAZb,cAGJjC,EAHI,gBAcOA,EAASC,OAdhB,QAcNwC,EAdM,QAeD1B,SACP/C,QAAQC,IAAI,WACZD,QAAQC,IAAI,UAAWgE,GACvBjE,QAAQC,IAAIgE,EAAQsC,UACpBvG,QAAQC,IAAIwE,EAAKzC,UACjB4E,EAAQ,CACND,YAAavF,KAAK0F,UAAUrC,EAAKzC,YAEnChC,QAAQC,IAAIK,GACZgB,aAAayF,QAAQ,SAAU3F,KAAK0F,UAAUrC,EAAKzC,WACnDhC,QAAQC,IAAIqB,aAAaC,QAAQ,YAEjCvB,QAAQC,IAAIwE,GA3BJ,2CAAH,sDA+BLnF,EAAS,WACXU,QAAQC,IAAI,WACZqB,aAAauB,WAAW,UACxB+D,EAAQ,CACND,YAAa,GACbJ,SAAU,MAMd,OACE,qBAAK/G,GAAG,UAAR,SAEIc,EAAKqG,YAAc,eAAC,IAAD,WACjB,cAAC,EAAD,CAAKrH,OAAQA,IACb,qBAAKC,UAAU,qBAAqBC,GAAG,kBAAvC,SAEI,qBAAKA,GAAG,UAAR,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOwH,KAAK,IAAIC,OAAK,EAACC,UAAWvH,IACjC,cAAC,IAAD,CAAOqH,KAAK,SAASC,OAAK,EAACC,UAAW7G,IACtC,cAAC,IAAD,CAAO2G,KAAK,UAAUC,OAAK,EAACC,UAAWpD,IACvC,cAAC,IAAD,CAAOkD,KAAK,WAAWC,OAAK,EAACC,UAAWpB,cAUvC,cAAC,EAAD,CAAWO,MAAOQ,EAAOP,OAAQhH,OC1ErC6H,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhE,MAAK,YAAkD,IAA/CiE,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.60b06454.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport App from '../../App'\r\n\r\nfunction Nav({Logout}) {\r\n    return (\r\n        <ul className=\"navbar-nav bg-gradient-primary sidebar sidebar-dark accordion\" id=\"accordionSidebar\">\r\n            <Link className=\"sidebar-brand d-flex align-items-center justify-content-center\" to=\"/\">\r\n                <div className=\"sidebar-brand-icon rotate-n-15\">\r\n                    <i className=\"fas fa-laugh-wink\"></i>\r\n                </div>\r\n                <div className=\"sidebar-brand-text mx-3\">Desilane Admin</div>\r\n            </Link>\r\n            <hr className=\"sidebar-divider my-0\"/>\r\n\r\n            <li className=\"nav-item active\">\r\n                <Link className=\"nav-link\" to=\"/\">\r\n                    <i className=\"fas fa-fw fa-tachometer-alt\"></i>\r\n                    <span>Dashboard</span></Link>\r\n            </li>\r\n\r\n            \r\n            <hr className=\"sidebar-divider\"/>\r\n            \r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/leads\">\r\n                    <i className=\"fas fa-fw fa-cog\"></i>\r\n                    <span>Leads</span>\r\n                </Link>\r\n            </li>\r\n\r\n            \r\n            {/* <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/categories\">\r\n                    <i className=\"fas fa-fw fa-cog\"></i>\r\n                    <span>Items</span>\r\n                </Link>\r\n            </li> */}\r\n\r\n            {/* <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/types\">\r\n                    <i className=\"fas fa-fw fa-cog\"></i>\r\n                    <span>Sub-Heading</span>\r\n                </Link>\r\n            </li> */}\r\n\r\n            {/* <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/headers\">\r\n                    <i className=\"fas fa-fw fa-cog\"></i>\r\n                    <span>Heading</span>\r\n                </Link>\r\n            </li> */}\r\n\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/images\">\r\n                    <i className=\"fas fa-fw fa-cog\"></i>\r\n                    <span>Menu</span>\r\n                </Link>\r\n            </li>\r\n\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/images2\">\r\n                    <i className=\"fas fa-fw fa-cog\"></i>\r\n                    <span>Menu2</span>\r\n                </Link>\r\n            </li>\r\n\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" onClick={Logout} to=\"/\">\r\n                    <i className=\"fas fa-fw fa-cog\"></i>\r\n                    <span>Logout</span>\r\n                </Link>\r\n            </li>\r\n            \r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","import React from 'react'\r\n\r\nfunction Home() {\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <h1>Hello Admin!</h1>\r\n            <div className=\"row\">\r\n\r\n                \r\n                        <div className=\"col-lg-6 mb-4\">\r\n\r\n                            \r\n                            {/* <div className=\"card shadow mb-4\">\r\n                                <div className=\"card-header py-3\">\r\n                                    <h6 className=\"m-0 font-weight-bold text-primary\">Projects</h6>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <h4 className=\"small font-weight-bold\">Server Migration <span\r\n                                            className=\"float-right\">20%</span></h4>\r\n                                    <div className=\"progress mb-4\">\r\n                                        <div className=\"progress-bar bg-danger\" role=\"progressbar\" style={{width:\"20%\"}}\r\n                                            aria-valuenow=\"20\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n                                    </div>\r\n                                    <h4 className=\"small font-weight-bold\">Sales Tracking <span\r\n                                            className=\"float-right\">40%</span></h4>\r\n                                    <div className=\"progress mb-4\">\r\n                                        <div className=\"progress-bar bg-warning\" role=\"progressbar\" style={{width:\"40%\"}}\r\n                                            aria-valuenow=\"40\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n                                    </div>\r\n                                    <h4 className=\"small font-weight-bold\">Customer Database <span\r\n                                            className=\"float-right\">60%</span></h4>\r\n                                    <div className=\"progress mb-4\">\r\n                                        <div className=\"progress-bar\" role=\"progressbar\" style={{width:\"60%\"}}\r\n                                            aria-valuenow=\"60\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n                                    </div>\r\n                                    <h4 className=\"small font-weight-bold\">Completion Rate <span\r\n                                            className=\"float-right\">80%</span></h4>\r\n                                    <div className=\"progress mb-4\">\r\n                                        <div className=\"progress-bar bg-info\" role=\"progressbar\" style={{width:\"80%\"}}\r\n                                            aria-valuenow=\"80\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n                                    </div>\r\n                                    <h4 className=\"small font-weight-bold\">Conversion Rate <span\r\n                                            className=\"float-right\">Complete!</span></h4>\r\n                                    <div className=\"progress\">\r\n                                        <div className=\"progress-bar bg-success\" role=\"progressbar\" style={{width:\"100%\"}}\r\n                                            aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n                                    </div>\r\n                                </div>\r\n                            </div> */}\r\n\r\n                            <h3>Welcome to the Admin Panel of Desi Lane. \r\n                                Everything is linked, paginated and customizable in this website. \r\n                                Take every action very carefully as it will be directly reflected on the main page!</h3>\r\n                            \r\n\r\n                            \r\n                            \r\n\r\n                        </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport config from '../../config.json'\r\n\r\nfunction LeadTableItem({item, remove, accept}) {\r\n    console.log(item)\r\n    return (\r\n        // <tr>\r\n        //     <td>{item.first_name+\" \"+item.last_name}</td>\r\n        //     <td>{item.email}</td>\r\n        //     <td>{item.address}</td>\r\n        //     <td>{item.phone_number}</td>\r\n        //     <td><ul>{item.requirements.map((requirement) => (\r\n        //         <li>{requirement.name}</li>\r\n        //     ))}</ul></td>\r\n        //     <td>{item.description}</td>\r\n        //     <td><button className=\"btn btn-success\" onClick={()=>{accept(item)}}>Accept</button>\r\n        //     <button className=\"btn btn-danger\" onClick={()=>{remove(item)}}>Delete</button>\r\n        //     </td>\r\n        // </tr>\r\n        <div className=\"card\">\r\n            <div className=\"card-body row\">\r\n                <div className=\"col-4\">\r\n                    <p><strong>Name</strong> : {item.first_name}</p> \r\n                </div>\r\n                {/* <div className=\"col-4\">\r\n                    <p><strong>Email</strong> : {item.email}</p> \r\n                </div> */}\r\n                <div className=\"col-4\">\r\n                    <p><strong>Phone</strong> : {item.phone_number}</p> \r\n                </div>\r\n\r\n                <div className=\"col-4\">\r\n                    <p><strong>Address</strong> : {item.address}</p> \r\n                </div>\r\n                \r\n                {/* <div className=\"col-4\">\r\n                    <p><strong>Birthday</strong> : {item.dob }</p> \r\n                </div> */}\r\n                <div className=\"col-4\">\r\n                    {accept?<button className=\"btn btn-success\" onClick={()=>{accept(item)}}>Accept</button>:\"\"}\r\n                    <button className=\"btn btn-danger\" onClick={()=>{remove(item)}}>Delete</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default LeadTableItem\r\n","import React, {useState, useEffect} from 'react'\r\nimport config from '../../config.json'\r\nimport LeadTableItem from './LeadTableItem'\r\nimport CsvDownload from 'react-json-to-csv'\r\n\r\nfunction Leads(user) {\r\n        // console.log(user)\r\n        let BaseUrl = config.baseUrl + \"/api/lead\"\r\n        let LeadUrl = config.baseUrl + \"/api/lead/all\"\r\n        // let PendingUrl = config.baseUrl + \"/api/lead/allPending\"\r\n        // let wipUrl = config.baseUrl + \"/api/lead/allWip\"\r\n        // let completedUrl = config.baseUrl + \"/api/lead/allCompleted\"\r\n        \r\n        // const [pendingleads, setPendingLeads] = useState([])\r\n        \r\n        // const [pendingPage, setPendingPage] = useState({\r\n        //     count: 0,\r\n        //     current: 0,\r\n        //     totalPage: 0\r\n        // })\r\n\r\n        // const [wipleads, setWipLeads] = useState([])\r\n        // const [wipPage, setWipPage] = useState({\r\n        //     count: 0,\r\n        //     current: 0,\r\n        //     totalPage: 0\r\n        // })\r\n        // const [completedleads, setCompletedLeads] = useState([])\r\n        // const [completedPage, setCompletedPage] = useState({\r\n        //     count: 0,\r\n        //     current: 0,\r\n        //     totalPage: 0\r\n        // })\r\n\r\n        const [leads, setLeads] = useState([])\r\n        \r\n        const [Page, setPage] = useState({\r\n            count: 0,\r\n            current: 0,\r\n            totalPage: 0\r\n        })\r\n        \r\n        let key = JSON.parse(localStorage.getItem(\"apiKey\"))\r\n\r\n        let fetchData = async(url) =>{\r\n            let response = await fetch(url, {\r\n                method: 'GET', // *GET, POST, PUT, DELETE, etc.\r\n                mode: 'cors', // no-cors, *cors, same-origin\r\n                cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n                // credentials: 'include', // include, *same-origin, omit\r\n                headers: {\r\n                  'Content-Type': 'application/json',\r\n                  \"Authorization\": key\r\n                //   'Content-Type': 'application/x-www-form-urlencoded',\r\n                },\r\n              })\r\n            let resp = await response.json()\r\n            return resp\r\n        }\r\n\r\n        let deleteItem = async (url) => {\r\n            let response = await fetch(url, {\r\n                method: 'DELETE', // *GET, POST, PUT, DELETE, etc.\r\n                mode: 'cors', // no-cors, *cors, same-origin\r\n                cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n                // credentials: 'include', // include, *same-origin, omit\r\n                headers: {\r\n                  'Content-Type': 'application/json',\r\n                  \"Authorization\": key\r\n                //   'Content-Type': 'application/x-www-form-urlencoded',\r\n                },\r\n              })\r\n            let resp = await response.json()\r\n            return resp\r\n        }\r\n\r\n        const [csvData, setCsvData] = useState([]);\r\n\r\n        async function makeCSV(response) {\r\n            let arr = [];\r\n            response.map((item)=> {\r\n                let obj = {};\r\n                obj.Name = item.first_name;\r\n                obj.Phone = item.phone_number;\r\n                arr.push(obj);\r\n            })\r\n            setCsvData(arr);\r\n        }\r\n\r\n        useEffect(()=>{\r\n            fetchData(LeadUrl+'?page='+Page.current).then((response)=>{\r\n                console.log(response);\r\n                if (response.success) {\r\n\r\n                    let resp = response.response;\r\n                    \r\n                    makeCSV(resp);\r\n\r\n                    console.log(\"success\",response)\r\n                    setLeads(response.response)    \r\n                    let currentPage = Page.current\r\n                    let totalPage = parseInt(response.count/50)\r\n                    if (response.count%50) {\r\n                        totalPage += 1\r\n                    }\r\n                    //checking pagination of the last item deletion in the last page\r\n                    // if (response.count % 10 === 0 && pendingPage.current ===  parseInt(response.count/10)) {\r\n                    //     currentPage -= 1\r\n                    // }\r\n\r\n                    setPage({\r\n                        count: response.count,\r\n                        current: currentPage,\r\n                        totalPage: totalPage\r\n                    })\r\n\r\n\r\n            } else {\r\n                console.log(response)\r\n            }    \r\n        })},[])\r\n\r\n        useEffect(()=>{\r\n            fetchData(LeadUrl+'?page='+Page.current).then((response)=>{\r\n                \r\n                if (response.success) {\r\n                console.log(\"success\",response)\r\n                makeCSV(response.response);\r\n                setLeads(response.response)    \r\n            } else {\r\n                console.log(response)\r\n            }    \r\n        })},[Page])\r\n\r\n        \r\n        async function removeItem(item){\r\n            let response = await deleteItem(BaseUrl+\"/\"+item._id)\r\n            if(response.success){\r\n                setLeads(leads.filter((lead)=>lead._id !== item._id))\r\n                console.log(\"remove\")\r\n                let currentPage = Page.current\r\n                //checking pagination of the last item deletion in the last page\r\n                if ((Page.count-1) % 50 === 0 && Page.current ===  parseInt((Page.count-1)/50)) {\r\n                    currentPage -= 1\r\n                }\r\n\r\n                if (Page.count % 50 && Page.totalPage != parseInt((Page.count-1)/50)){\r\n                    Page.totalPage -= 1\r\n                }\r\n\r\n\r\n                setPage({\r\n                    count: Page.count - 1 ,\r\n                    current: currentPage\r\n                })\r\n            } else {\r\n                console.log(\"Cannot delete\")\r\n            }\r\n            \r\n        }\r\n\r\n        \r\n\r\n        \r\n\r\n        async function previousPage() {\r\n            if (Page.current != 0){\r\n                setPage({...Page, current: Page.current - 1});\r\n            }\r\n            console.log(Page)\r\n        }\r\n\r\n        async function nextPage() {\r\n            if (Page.current < Page.totalPage){\r\n                setPage({...Page, current: Page.current + 1});\r\n            }\r\n            console.log(Page)\r\n        }\r\n\r\n        \r\n\r\n        \r\n\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n\r\n                    <h1 className=\"h3 mb-2 text-gray-800 heading\">Leads Table</h1> <CsvDownload data={csvData} />\r\n\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-primary\">Leads</h6>\r\n                        </div>\r\n                                {/* <table className=\"table table-bordered\" id=\"dataTable\" width=\"100%\" cellspacing=\"0\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>Name</th>\r\n                                            <th>Email</th>\r\n                                            <th>Address</th>\r\n                                            <th>Phone</th>\r\n                                            <th>Requirements</th>\r\n                                            <th>Description</th>\r\n                                            <th>Accept/Delete</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {pendingleads.map((item)=>(\r\n                                            <LeadTableItem key={item._id} item={item} accept={acceptPending} remove={removeItemFromPending}></LeadTableItem>\r\n                                        ))}\r\n                                        \r\n                                    </tbody>\r\n                                    \r\n                                </table> */}\r\n                                <div className=\"container\" width=\"100%\">\r\n                                    \r\n                                    {leads.map((item)=>(\r\n                                        <LeadTableItem key={item._id} item={item} remove={removeItem}></LeadTableItem>\r\n                                    ))}\r\n                                </div>\r\n                                <nav aria-label=\"...\">\r\n                                    <ul className=\"pagination\">\r\n                                    \r\n                                            <li className=\"page-item\">\r\n                                                <button className=\"page-link\" onClick={()=>{previousPage()}}>Prev</button>\r\n                                            </li>\r\n                                            <li className=\"page-item\">\r\n                                                <button className=\"page-link\" onClick={()=>{nextPage()}}>Next</button>\r\n                                            </li>\r\n                                        \r\n                                    </ul>\r\n                                </nav>\r\n                    </div>\r\n\r\n    </div>\r\n                \r\n                \r\n    )\r\n}\r\n\r\nexport default Leads\r\n","import React from 'react'\r\nimport config from '../../config.json'\r\nfunction ImagesTableItem({item, remove}) {\r\n    console.log(\"here\", item)\r\n\r\n    let menuHandler = ()=> {\r\n        window.location.href = config.baseUrl + \"/\" + item.url;\r\n    }\r\n\r\n    return (\r\n        <tr className=\"row\">\r\n            <td className=\"col-6\"><a onClick={menuHandler}>Click Here to view the menu card</a></td>\r\n            <td className=\"col-3\"><button className=\"btn btn-danger\" onClick={()=>{remove(item)}}>Delete</button></td>\r\n            \r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default ImagesTableItem\r\n","import React, {useEffect, useState, useRef} from 'react'\r\nimport config from '../../config.json'\r\nimport ImagesTableItem from './imagesTableItem'\r\n\r\nfunction Images() {\r\n    const [images, setimages] = useState([])\r\n    const [details, setDetails] = useState({\r\n        url: \"\",\r\n    })\r\n    const [imgPage, setImgPage] = useState({\r\n        count: 0,\r\n        current: 0,\r\n        totalPage: 0\r\n    })\r\n    let form = useRef(null)\r\n    let key = JSON.parse(localStorage.getItem(\"apiKey\"))\r\n\r\n    let url = config.baseUrl+\"/api/image\"\r\n\r\n    let formData = new FormData()\r\n\r\n    let fetchData = async(url) =>{\r\n        let response = await fetch(url, {\r\n            method: 'GET', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, *cors, same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            // credentials: 'include', // include, *same-origin, omit\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              \"Authorization\": key\r\n            //   'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n          })\r\n        let resp = await response.json()\r\n        return resp\r\n    }\r\n    \r\n    let postData = async(url, formData) =>{\r\n        console.log(formData)\r\n        let response = await fetch(url, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, *cors, same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            // credentials: 'include', // include, *same-origin, omit\r\n            headers: {\r\n            //   'Content-Type': 'multipart/form-data',\r\n              \"Authorization\": key\r\n            //   'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            body: formData\r\n          })\r\n        let resp = await response.json()\r\n        return resp\r\n    }\r\n\r\n    let deleteData = async(url) => {\r\n        let response = await fetch(url, {\r\n            method: 'DELETE',\r\n            mode: 'cors',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                \"Authorization\": key\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        fetchData(url+\"/all\"+\"?page=\"+imgPage.current).then(async(response)=>{\r\n            console.log(\"response\",response)\r\n            if (response.success){\r\n                console.log(response.response)\r\n                setimages(response.response)\r\n                let currentPage = imgPage.current\r\n                let totalPage = parseInt(response.count/9)\r\n                if (response.count%9) {\r\n                    totalPage += 1\r\n                }\r\n                //checking pagination of the last item deletion in the last page\r\n                // if (response.count % 10 === 0 && pendingPage.current ===  parseInt(response.count/10)) {\r\n                //     currentPage -= 1\r\n                // }\r\n\r\n                setImgPage({\r\n                    count: response.count,\r\n                    current: currentPage,\r\n                    totalPage: totalPage\r\n                })\r\n            } else {\r\n                console.log(\"unable to fetch data!\")\r\n            }\r\n            \r\n        })\r\n    },[details])\r\n\r\n    async function previousImgPage() {\r\n        if (imgPage.current != 0){\r\n            setImgPage({...imgPage, current: imgPage.current - 1});\r\n        }\r\n        console.log(imgPage)\r\n    }\r\n\r\n    async function nextImgPage() {\r\n        if (imgPage.current < imgPage.totalPage){\r\n            setImgPage({...imgPage, current: imgPage.current + 1});\r\n        }\r\n        console.log(imgPage)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        fetchData(url+'/all?page='+imgPage.current).then((response)=>{\r\n        if (response.success) {\r\n            console.log(\"success\", response)\r\n            setimages(response.response)\r\n        } else {\r\n            console.log(response)\r\n        }    \r\n    })},[imgPage])\r\n\r\n    async function deleteItem(item) {\r\n        deleteData(url+\"/\"+item._id).then( ()=>{\r\n            setimages(images.filter((category)=> category._id !== item._id))\r\n            console.log(\"Delete is being called!\", item._id\r\n            )})\r\n    }\r\n\r\n    let submitHandler = (e) => {\r\n        // console.log(\"current form:\",e.target.imgFIle)\r\n        let formData = new FormData(e.target)\r\n        e.target.imgFile.value = null\r\n        // console.log(formData, \"here is the form\")\r\n        e.preventDefault();\r\n        console.log(\"This is here\",details)\r\n        postData(url+\"/create\", formData).then(async(response)=> {\r\n            if(response.success) {\r\n                setimages([response.response])\r\n            } else {\r\n                console.log(response)\r\n                console.log(\"Cannot create\")\r\n            }\r\n            \r\n        })\r\n        \r\n        console.log(details)\r\n    }\r\n\r\n    const handleImageUpload = event => {\r\n        console.log(\"inside onChange!\")\r\n        const files = event.target.files\r\n        console.log(files[0])\r\n        const formData = new FormData()\r\n        formData.append('imgFile', files[0])\r\n      \r\n        // fetch('/saveImage', {\r\n        //   method: 'POST',\r\n        //   body: formData\r\n        // })\r\n        // .then(response => response.json())\r\n        // .then(data => {\r\n        //   console.log(data)\r\n        // })\r\n        // .catch(error => {\r\n        //   console.error(error)\r\n        // })\r\n      }\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n                    <h1 className=\"h3 mb-2 text-gray-800 heading\">Upload the menu card in .pdf format</h1>\r\n\r\n                    <form className=\"user\" ref={form} onSubmit={submitHandler}>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"file\" name=\"imgFile\" className=\"form-control-user\"\r\n                                id=\"exampleInputEmail\" aria-describedby=\"emailHelp\" onChange={event => handleImageUpload(event)}\r\n                                placeholder=\"Enter Service Name...\" required></input>\r\n                        </div>\r\n                        <button type=\"submit\" onSubmit={submitHandler} className=\"btn btn-primary btn-user btn-block\">\r\n                            Upload\r\n                        </button>\r\n                    </form>\r\n\r\n                    <h1 className=\"h3 mb-2 text-gray-800 heading\">Menu</h1>\r\n\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-primary\">Current</h6>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                                <table cellspacing=\"0\">\r\n                                    {/* <thead>\r\n                                        <tr>\r\n                                            <th>Name</th>\r\n                                            <th>Delete</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                     */}\r\n                                        {images.map((item)=>(\r\n                                            <ImagesTableItem key={item._id} item={item} remove={deleteItem}></ImagesTableItem>\r\n                                        ))}\r\n                                        \r\n                                    \r\n                                </table>\r\n                            \r\n                        </div>\r\n                        {/* <nav aria-label=\"...\">\r\n                            <ul className=\"pagination\">\r\n                            \r\n                                    <li className=\"page-item\">\r\n                                        <button className=\"page-link\" onClick={()=>{previousImgPage()}}>Prev</button>\r\n                                    </li>\r\n                                    <li className=\"page-item\">\r\n                                        <button className=\"page-link\" onClick={()=>{nextImgPage()}}>Next</button>\r\n                                    </li>\r\n                                \r\n                            </ul>\r\n                        </nav> */}\r\n                    </div>\r\n        </div>)\r\n}\r\n\r\nexport default Images\r\n","import React from 'react'\r\nimport config from '../../config.json'\r\nfunction ImagesTableItem({item, remove}) {\r\n    console.log(\"here\", item)\r\n\r\n    let menuHandler = ()=> {\r\n        window.location.href = config.baseUrl + \"/\" + item.url;\r\n    }\r\n\r\n    return (\r\n        <tr className=\"row\">\r\n            <td className=\"col-6\"><a onClick={menuHandler}>Click Here to view the menu card</a></td>\r\n            <td className=\"col-3\"><button className=\"btn btn-danger\" onClick={()=>{remove(item)}}>Delete</button></td>\r\n            \r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default ImagesTableItem\r\n","import React, {useEffect, useState, useRef} from 'react'\r\nimport config from '../../config.json'\r\nimport ImagesTableItem from './imagesTableItem'\r\n\r\nfunction Images2() {\r\n    const [images2, setimages2] = useState([])\r\n    const [details2, setDetails2] = useState({\r\n        url: \"\",\r\n    })\r\n    const [imgPage2, setImgPage2] = useState({\r\n        count: 0,\r\n        current: 0,\r\n        totalPage: 0\r\n    })\r\n    let form = useRef(null)\r\n    let key = JSON.parse(localStorage.getItem(\"apiKey\"))\r\n\r\n    let url = config.baseUrl+\"/api/image2\"\r\n\r\n    let formData = new FormData()\r\n\r\n    let fetchData = async(url) =>{\r\n        let response = await fetch(url, {\r\n            method: 'GET', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, *cors, same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            // credentials: 'include', // include, *same-origin, omit\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              \"Authorization\": key\r\n            //   'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n          })\r\n        let resp = await response.json()\r\n        return resp\r\n    }\r\n    \r\n    let postData = async(url, formData) =>{\r\n        console.log(formData)\r\n        let response = await fetch(url, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, *cors, same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            // credentials: 'include', // include, *same-origin, omit\r\n            headers: {\r\n            //   'Content-Type': 'multipart/form-data',\r\n              \"Authorization\": key\r\n            //   'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            body: formData\r\n          })\r\n        let resp = await response.json()\r\n        return resp\r\n    }\r\n\r\n    let deleteData = async(url) => {\r\n        let response = await fetch(url, {\r\n            method: 'DELETE',\r\n            mode: 'cors',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                \"Authorization\": key\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        fetchData(url+\"/all\"+\"?page=\"+imgPage2.current).then(async(response)=>{\r\n            console.log(\"response\",response)\r\n            if (response.success){\r\n                console.log(response.response)\r\n                setimages2(response.response)\r\n                let currentPage = imgPage2.current\r\n                let totalPage = parseInt(response.count/9)\r\n                if (response.count%9) {\r\n                    totalPage += 1\r\n                }\r\n                //checking pagination of the last item deletion in the last page\r\n                // if (response.count % 10 === 0 && pendingPage.current ===  parseInt(response.count/10)) {\r\n                //     currentPage -= 1\r\n                // }\r\n\r\n                setImgPage2({\r\n                    count: response.count,\r\n                    current: currentPage,\r\n                    totalPage: totalPage\r\n                })\r\n            } else {\r\n                console.log(\"unable to fetch data!\")\r\n            }\r\n            \r\n        })\r\n    },[details2])\r\n\r\n    async function previousImgPage() {\r\n        if (imgPage2.current != 0){\r\n            setImgPage2({...imgPage2, current: imgPage2.current - 1});\r\n        }\r\n        console.log(imgPage2)\r\n    }\r\n\r\n    async function nextImgPage() {\r\n        if (imgPage2.current < imgPage2.totalPage){\r\n            setImgPage2({...imgPage2, current: imgPage2.current + 1});\r\n        }\r\n        console.log(imgPage2)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        fetchData(url+'/all?page='+imgPage2.current).then((response)=>{\r\n        if (response.success) {\r\n            console.log(\"success\", response)\r\n            setimages2(response.response)\r\n        } else {\r\n            console.log(response)\r\n        }    \r\n    })},[imgPage2])\r\n\r\n    async function deleteItem(item) {\r\n        deleteData(url+\"/\"+item._id).then( ()=>{\r\n            setimages2(images2.filter((category)=> category._id !== item._id))\r\n            console.log(\"Delete is being called!\", item._id\r\n            )})\r\n    }\r\n\r\n    let submitHandler = (e) => {\r\n        // console.log(\"current form:\",e.target.imgFIle)\r\n        let formData = new FormData(e.target)\r\n        e.target.imgFile.value = null\r\n        // console.log(formData, \"here is the form\")\r\n        e.preventDefault();\r\n        console.log(\"This is here\",details2)\r\n        postData(url+\"/create\", formData).then(async(response)=> {\r\n            if(response.success) {\r\n                setimages2([response.response])\r\n            } else {\r\n                console.log(response)\r\n                console.log(\"Cannot create\")\r\n            }\r\n            \r\n        })\r\n        \r\n        console.log(details2)\r\n    }\r\n\r\n    const handleImageUpload = event => {\r\n        console.log(\"inside onChange!\")\r\n        const files = event.target.files\r\n        console.log(files[0])\r\n        const formData = new FormData()\r\n        formData.append('imgFile', files[0])\r\n      \r\n        // fetch('/saveImage', {\r\n        //   method: 'POST',\r\n        //   body: formData\r\n        // })\r\n        // .then(response => response.json())\r\n        // .then(data => {\r\n        //   console.log(data)\r\n        // })\r\n        // .catch(error => {\r\n        //   console.error(error)\r\n        // })\r\n      }\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n                    <h1 className=\"h3 mb-2 text-gray-800 heading\">Upload the menu card in .pdf format</h1>\r\n\r\n                    <form className=\"user\" ref={form} onSubmit={submitHandler}>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"file\" name=\"imgFile\" className=\"form-control-user\"\r\n                                id=\"exampleInputEmail\" aria-describedby=\"emailHelp\" onChange={event => handleImageUpload(event)}\r\n                                placeholder=\"Enter Service Name...\" required></input>\r\n                        </div>\r\n                        <button type=\"submit\" onSubmit={submitHandler} className=\"btn btn-primary btn-user btn-block\">\r\n                            Upload\r\n                        </button>\r\n                    </form>\r\n\r\n                    <h1 className=\"h3 mb-2 text-gray-800 heading\">Menu</h1>\r\n\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-primary\">Current</h6>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                                <table cellspacing=\"0\">\r\n                                    {/* <thead>\r\n                                        <tr>\r\n                                            <th>Name</th>\r\n                                            <th>Delete</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                     */}\r\n                                        {images2.map((item)=>(\r\n                                            <ImagesTableItem key={item._id} item={item} remove={deleteItem}></ImagesTableItem>\r\n                                        ))}\r\n                                        \r\n                                    \r\n                                </table>\r\n                            \r\n                        </div>\r\n                        {/* <nav aria-label=\"...\">\r\n                            <ul className=\"pagination\">\r\n                            \r\n                                    <li className=\"page-item\">\r\n                                        <button className=\"page-link\" onClick={()=>{previousImgPage()}}>Prev</button>\r\n                                    </li>\r\n                                    <li className=\"page-item\">\r\n                                        <button className=\"page-link\" onClick={()=>{nextImgPage()}}>Next</button>\r\n                                    </li>\r\n                                \r\n                            </ul>\r\n                        </nav> */}\r\n                    </div>\r\n        </div>)\r\n}\r\n\r\nexport default Images2\r\n","import React, {useState} from 'react'\r\n\r\nfunction LoginPage({login, logout}) {\r\n    let [details, setDetails] = useState({ username: \"\", password: \"\"})\r\n\r\n    let submitHandler = (e) => {\r\n        e.preventDefault();\r\n        login(details)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n\r\n        <div className=\"row justify-content-center\">\r\n\r\n            <div className=\"col-xl-10 col-lg-12 col-md-9\">\r\n                <div className=\"card o-hidden border-0 shadow-lg my-5\">\r\n                    <div className=\"card-body p-0\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-6 d-none d-lg-block bg-login-image\"></div>\r\n                            <div className=\"col-lg-6\">\r\n                                <div className=\"p-5\">\r\n                                    <div className=\"text-center\">\r\n                                        <h1 className=\"h4 text-gray-900 mb-4\">Welcome Back!</h1>\r\n                                    </div>\r\n                                    <form className=\"user\" onSubmit={submitHandler}>\r\n                                        <div className=\"form-group\">\r\n                                            <input type=\"text\" name=\"username\" className=\"form-control form-control-user\"\r\n                                                id=\"exampleInputEmail\" aria-describedby=\"emailHelp\" onChange={e => {setDetails({...details, username: e.target.value})}}\r\n                                                value={details.username}\r\n                                                placeholder=\"Enter username...\" required></input>\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <input type=\"password\" name=\"password\" className=\"form-control form-control-user\" onChange={e => {setDetails({...details, password: e.target.value})}}\r\n                                                value={details.password}\r\n                                                id=\"exampleInputPassword\" placeholder=\"Password\"></input>\r\n                                        </div>\r\n                                        <button type=\"submit\" onSubmit={submitHandler} className=\"btn btn-primary btn-user btn-block\">\r\n                                            Login\r\n                                        </button>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default LoginPage\r\n","import Nav from './components/nav/Nav';\r\nimport './App.css';\r\nimport './css/sb-admin-2.css'\r\nimport './css/sb-admin-2.min.css'\r\nimport Home from './components/home/Home';\r\nimport Leads from './components/leads/Leads';\r\nimport Categories from './components/categories/Categories';\r\nimport Images from './components/images/Images';\r\nimport Images2 from './components/images2/Images2';\r\nimport Types from './components/types/Types';\r\nimport Headers from './components/header/Headers';\r\nimport LoginPage from './components/LoginPage/LoginPage';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport config from './config.json'\r\nimport { useState } from 'react';\r\n\r\nfunction App() {\r\n\r\n  const [user, setUser] = useState({\r\n    accesstoken: localStorage.getItem(\"apiKey\"),\r\n  })\r\n\r\n  let Login = async (details) => {\r\n    \r\n    let url = config.baseUrl+\"/api/admin/login\"\r\n    const response = await fetch(url, {\r\n      method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n      mode: 'cors', // no-cors, *cors, same-origin\r\n      cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n      // credentials: 'include', // include, *same-origin, omit\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n        // 'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n      body: JSON.stringify(details) \r\n    })\r\n    let body = await response.json()\r\n    if (body.success) {\r\n      console.log(\"Success\")\r\n      console.log(\"details\", details)\r\n      console.log(details.username)\r\n      console.log(body.response)\r\n      setUser({\r\n        accesstoken: JSON.stringify(body.response),\r\n      })\r\n      console.log(user)\r\n      localStorage.setItem(\"apiKey\", JSON.stringify(body.response))\r\n      console.log(localStorage.getItem(\"apiKey\"))\r\n    } else {\r\n      console.log(body)\r\n    }\r\n  }\r\n\r\n  let Logout = () => {\r\n    console.log(\"Log out\")\r\n    localStorage.removeItem(\"apiKey\")\r\n    setUser({\r\n      accesstoken: \"\",\r\n      username: \"\"\r\n    }\r\n    )\r\n    \r\n  }\r\n\r\n  return (\r\n    <div id=\"wrapper\">\r\n      {\r\n        user.accesstoken? (<Router>\r\n          <Nav Logout={Logout}></Nav>\r\n          <div className=\"d-flex flex-column\" id=\"content-wrapper\">\r\n\r\n              <div id=\"content\">\r\n                <Switch>\r\n                  <Route path='/' exact component={Home}></Route>\r\n                  <Route path='/leads' exact component={Leads}></Route>\r\n                  <Route path=\"/images\" exact component={Images}></Route>\r\n                  <Route path=\"/images2\" exact component={Images2}></Route>\r\n{/*                   \r\n                  <Route path=\"/headers\" exact component={Headers}></Route>\r\n                  <Route path=\"/categories\" exact component={Categories}></Route>\r\n                  <Route path=\"/types\" exact component={Types}></Route> */}\r\n                </Switch>\r\n              </div>\r\n\r\n          </div>\r\n          \r\n      </Router>) : <LoginPage login={Login} logout={Logout}></LoginPage>\r\n      }\r\n      \r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}